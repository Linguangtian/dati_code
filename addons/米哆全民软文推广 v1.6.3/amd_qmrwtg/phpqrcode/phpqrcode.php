<?php
 goto dT0pf; pmzRv: define("\x51\122\x5f\x4c\x4f\x47\x5f\x44\x49\x52", false); goto YkWiX; SqKyQ: define("\121\x52\x43\101\x50\137\x45\103", 3); goto N2LXU; k8ZZb: class QRrawcode { public $version; public $datacode = array(); public $ecccode = array(); public $blocks; public $rsblocks = array(); public $count; public $dataLength; public $eccLength; public $b1; public function __construct(QRinput $input) { goto zBxDN; FLjOX: $this->eccLength = QRspec::rsEccLength($spec); goto s_ZML; a4SDA: $this->blocks = QRspec::rsBlockNum($spec); goto X8Cx2; ElIdn: if (!is_null($this->datacode)) { goto W0jEU; } goto eraHh; ztbC6: return null; goto LG1RC; Q1JAK: throw new Exception("\x62\x6c\157\143\x6b\x20\x61\154\x6c\157\143\x20\x65\162\162\x6f\x72"); goto ztbC6; X8Cx2: $ret = $this->init($spec); goto I_msW; Z4KDk: W0jEU: goto xCtlQ; I_msW: if (!($ret < 0)) { goto dlqen; } goto Q1JAK; xCtlQ: QRspec::getEccSpec($input->getVersion(), $input->getErrorCorrectionLevel(), $spec); goto atj5L; eraHh: throw new Exception("\156\x75\154\154\x20\x69\x6d\x70\165\x74\40\x73\x74\x72\x69\156\x67"); goto Z4KDk; NDpwA: $this->b1 = QRspec::rsBlockNum1($spec); goto GefIf; s_ZML: $this->ecccode = array_fill(0, $this->eccLength, 0); goto a4SDA; GefIf: $this->dataLength = QRspec::rsDataLength($spec); goto FLjOX; atj5L: $this->version = $input->getVersion(); goto NDpwA; LG1RC: dlqen: goto B30g1; kNL9u: $this->datacode = $input->getByteStream(); goto ElIdn; zBxDN: $spec = array(0, 0, 0, 0, 0); goto kNL9u; B30g1: $this->count = 0; goto i19s9; i19s9: } public function init(array $spec) { goto X05WH; bgnX9: $eccPos += $el; goto ES05C; X5Q0f: $i++; goto L8fcE; YvHpv: $ecc = array_slice($this->ecccode, $eccPos); goto hjX6A; z1ba6: $dl = QRspec::rsDataCodes2($spec); goto saUre; lm7cn: $dataPos += $dl; goto bgnX9; lcA1y: JoIJW: goto ZZR0V; SHTUr: goto squ_8; goto lcA1y; K6bY6: $i++; goto SHTUr; hjX6A: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto muic1; KwSBB: $ecc = array_slice($this->ecccode, $eccPos); goto J2cB4; czWiI: $el = QRspec::rsEccCodes1($spec); goto ZeVmQ; r7TK9: $eccPos += $el; goto u4FcD; ES05C: $blockNo++; goto onaSP; muic1: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto lm7cn; ZeVmQ: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto glD5D; AhEpc: $i = 0; goto EGqrT; c5d4f: $dataPos += $dl; goto r7TK9; MuldC: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto c5d4f; JC155: $dataPos = 0; goto VaHL6; ZZR0V: return 0; goto TqK2M; saUre: $el = QRspec::rsEccCodes2($spec); goto MKwTQ; EGqrT: JSdPe: goto zhEB8; ndMFa: if (!($rs == NULL)) { goto TBODM; } goto NjZl2; L8fcE: goto JSdPe; goto uMw1S; X05WH: $dl = QRspec::rsDataCodes1($spec); goto czWiI; RMxt1: j59hJ: goto K6bY6; uMw1S: Wx2kw: goto WsIYT; MKwTQ: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto ndMFa; glD5D: $blockNo = 0; goto JC155; zJ6Hg: squ_8: goto Pp1Mw; u4FcD: $blockNo++; goto RMxt1; zhEB8: if (!($i < QRspec::rsBlockNum1($spec))) { goto Wx2kw; } goto YvHpv; Fkigc: return 0; goto kZHxL; NjZl2: return -1; goto buev7; HYPEC: $i = 0; goto zJ6Hg; kZHxL: yhaSk: goto z1ba6; VaHL6: $eccPos = 0; goto AhEpc; buev7: TBODM: goto HYPEC; onaSP: wBzu3: goto X5Q0f; Pp1Mw: if (!($i < QRspec::rsBlockNum2($spec))) { goto JoIJW; } goto KwSBB; WsIYT: if (!(QRspec::rsBlockNum2($spec) == 0)) { goto yhaSk; } goto Fkigc; J2cB4: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto MuldC; TqK2M: } public function getCode() { goto K72ws; FCVPw: if ($this->count < $this->dataLength + $this->eccLength) { goto mUTod; } goto EvqgN; QGOU0: goto Q4oxN; goto C2kQq; FYo1t: $row = $this->count % $this->blocks; goto txBln; yqNb0: $ret = $this->rsblocks[$row]->ecc[$col]; goto jt3x1; LwyjT: return $ret; goto aZdwB; v4f2g: $ret = $this->rsblocks[$row]->data[$col]; goto q8nsk; tlwKY: KDGBA: goto v4f2g; CghOt: $this->count++; goto LwyjT; C2kQq: mUTod: goto f2zlb; f2zlb: $row = ($this->count - $this->dataLength) % $this->blocks; goto aWTpd; EvqgN: return 0; goto QGOU0; aWTpd: $col = ($this->count - $this->dataLength) / $this->blocks; goto yqNb0; z_Z_P: if (!($col >= $this->rsblocks[0]->dataLength)) { goto KDGBA; } goto BO3qj; BpO0F: if ($this->count < $this->dataLength) { goto fMqiC; } goto FCVPw; q8nsk: FFPbf: goto CghOt; jt3x1: Q4oxN: goto qZgV0; K72ws: $ret; goto BpO0F; txBln: $col = $this->count / $this->blocks; goto z_Z_P; lbpIO: fMqiC: goto FYo1t; BO3qj: $row += $this->b1; goto tlwKY; qZgV0: goto FFPbf; goto lbpIO; aZdwB: } } goto jYtLD; zKDRA: class QRrs { public static $items = array(); public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto Wk1am; Wk1am: foreach (self::$items as $rs) { goto mfoyl; O5upK: zcB31: goto PCIlx; Mev5J: goto BOMer; goto E_mxO; cwNZ7: goto BOMer; goto PSEh_; HIt60: goto BOMer; goto nizN_; rCHtD: if (!($rs->fcr != $fcr)) { goto zcB31; } goto CIWRv; FoVNz: LaxxT: goto rCHtD; yWAAv: goto BOMer; goto XhFOa; aVDaQ: if (!($rs->nroots != $nroots)) { goto R1sf_; } goto yWAAv; nizN_: bTQRJ: goto cH4Eg; T5wp7: if (!($rs->gfpoly != $gfpoly)) { goto LaxxT; } goto MW1zC; PSEh_: Yk1ug: goto T5wp7; XhFOa: R1sf_: goto OdySa; OdySa: if (!($rs->mm != $symsize)) { goto Yk1ug; } goto cwNZ7; E_mxO: Xb9WG: goto aVDaQ; heAXM: BOMer: goto CmJmE; CIWRv: goto BOMer; goto O5upK; MW1zC: goto BOMer; goto FoVNz; PCIlx: if (!($rs->prim != $prim)) { goto bTQRJ; } goto HIt60; mfoyl: if (!($rs->pad != $pad)) { goto Xb9WG; } goto Mev5J; cH4Eg: return $rs; goto heAXM; CmJmE: } goto oAXLF; Rjcfe: array_unshift(self::$items, $rs); goto v9Y3n; oAXLF: kNHjV: goto KLvYu; KLvYu: $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad); goto Rjcfe; v9Y3n: return $rs; goto sJsMr; sJsMr: } } goto g2z5D; bkzOy: class QRbitstream { public $data = array(); public function size() { return count($this->data); } public function allocate($setLength) { $this->data = array_fill(0, $setLength, 0); return 0; } public static function newFromNum($bits, $num) { goto wAYbe; FWkNZ: $bstream->allocate($bits); goto iAg4A; QjwQ1: return $bstream; goto A5EI7; Tu25S: $mask = $mask >> 1; goto Avl4R; e7Sab: $i++; goto J0qWT; FicEa: goto I1plW; goto JR6eQ; lLKrf: if (!($i < $bits)) { goto Y5LIP; } goto mTP2F; iAg4A: $mask = 1 << $bits - 1; goto GvCBs; STAaa: kRV6o: goto lLKrf; Avl4R: lIAle: goto e7Sab; RE_Pn: Y5LIP: goto QjwQ1; foNqx: I1plW: goto Tu25S; e2LeV: $bstream->data[$i] = 0; goto FicEa; J0qWT: goto kRV6o; goto RE_Pn; wAYbe: $bstream = new QRbitstream(); goto FWkNZ; kI5Kz: $bstream->data[$i] = 1; goto foNqx; mTP2F: if ($num & $mask) { goto P6WLu; } goto e2LeV; GvCBs: $i = 0; goto STAaa; JR6eQ: P6WLu: goto kI5Kz; A5EI7: } public static function newFromBytes($size, $data) { goto zlN_M; m9csJ: if (!($i < $size)) { goto erQys; } goto fniMW; KrKYS: goto Q9jZc; goto a7ByY; zlN_M: $bstream = new QRbitstream(); goto lGf69; nFGLB: CQS52: goto pw2O4; LjhOz: $p++; goto j2pF2; KiQ_D: return $bstream; goto kp2vq; pw2O4: if (!($j < 8)) { goto BXBxs; } goto Fycl0; GOP7k: goto CQS52; goto JgR6c; JNtee: tI3wJ: goto pIWtB; d5eM3: $p = 0; goto KxBfI; tiWJo: Q9jZc: goto LjhOz; JgR6c: BXBxs: goto RkQ4Z; lGf69: $bstream->allocate($size * 8); goto d5eM3; KxBfI: $i = 0; goto AcQhT; jUXwp: $j = 0; goto nFGLB; a7ByY: ECCCZ: goto I8vEl; RkQ4Z: symqP: goto ZceIv; AcQhT: FS7hp: goto m9csJ; I8vEl: $bstream->data[$p] = 1; goto tiWJo; li3CT: $bstream->data[$p] = 0; goto KrKYS; ZceIv: $i++; goto uNDfx; pIWtB: $j++; goto GOP7k; fniMW: $mask = 0x80; goto jUXwp; Fycl0: if ($data[$i] & $mask) { goto ECCCZ; } goto li3CT; hHetf: erQys: goto KiQ_D; uNDfx: goto FS7hp; goto hHetf; j2pF2: $mask = $mask >> 1; goto JNtee; kp2vq: } public function append(QRbitstream $arg) { goto y4RMp; wF99r: return 0; goto bgUf3; y4RMp: if (!is_null($arg)) { goto Yn6YN; } goto j_e9z; dc1nw: if (!($arg->size() == 0)) { goto sRM4I; } goto wHI7N; wHI7N: return 0; goto wnqn2; rFM3t: if (!($this->size() == 0)) { goto GvyKn; } goto G0lIL; Bwzdk: Yn6YN: goto dc1nw; wnqn2: sRM4I: goto rFM3t; j_e9z: return -1; goto Bwzdk; AMmJB: return 0; goto g1x1L; G0lIL: $this->data = $arg->data; goto wF99r; bgUf3: GvyKn: goto rrORN; rrORN: $this->data = array_values(array_merge($this->data, $arg->data)); goto AMmJB; g1x1L: } public function appendNum($bits, $num) { goto l3Fad; RqUxW: return -1; goto JBBO3; uyMx4: return 0; goto CrhsC; HEjWr: return $ret; goto gQtTx; ErLY5: $b = QRbitstream::newFromNum($bits, $num); goto SRG6e; SRG6e: if (!is_null($b)) { goto cGgZJ; } goto RqUxW; CrhsC: TdKHp: goto ErLY5; Y9b0S: unset($b); goto HEjWr; iZmxW: $ret = $this->append($b); goto Y9b0S; l3Fad: if (!($bits == 0)) { goto TdKHp; } goto uyMx4; JBBO3: cGgZJ: goto iZmxW; gQtTx: } public function appendBytes($size, $data) { goto QxOBR; LBeyS: $ret = $this->append($b); goto I9_os; I9_os: unset($b); goto zg26Z; MqKqQ: $b = QRbitstream::newFromBytes($size, $data); goto HdQCz; ywsoO: return -1; goto CbXC1; QxOBR: if (!($size == 0)) { goto cATux; } goto v99PH; nEWhT: cATux: goto MqKqQ; v99PH: return 0; goto nEWhT; HdQCz: if (!is_null($b)) { goto jhZfC; } goto ywsoO; zg26Z: return $ret; goto hkp92; CbXC1: jhZfC: goto LBeyS; hkp92: } public function toByte() { goto P_pcU; bsNgD: $data[$i] = $v; goto OejJU; Iw4Hc: return array(); goto X0jn9; v5TNo: $data = array_fill(0, (int) (($size + 7) / 8), 0); goto K9Fdg; OejJU: N1XUw: goto HdfBw; dnKLJ: TFXGH: goto TVBCm; mX6Ei: u67n6: goto zIZlZ; zXvEO: CF1S5: goto Vyy_p; zfxmP: $v = 0; goto fuZ0Y; CuCxy: $v |= $this->data[$p]; goto GB2OQ; nhFtr: if (!($size == 0)) { goto tjrXx; } goto Iw4Hc; zIZlZ: return $data; goto i0NKn; Ytn2f: goto QVqoT; goto oWgSf; DiWm4: pZsQ9: goto jsYYZ; K9Fdg: $bytes = (int) ($size / 8); goto RmXP0; s4TEh: $v = 0; goto kkavM; vvCf2: dfXiZ: goto yV7rR; XJ0QF: goto TFXGH; goto S9QHN; rzKAF: if (!($i < $bytes)) { goto EDjR0; } goto s4TEh; reTid: $v = $v << 1; goto AxOLg; FPozB: $v = $v << 1; goto CuCxy; HdfBw: $i++; goto Ytn2f; jsYYZ: if (!($j < ($size & 7))) { goto CF1S5; } goto FPozB; G0JDp: if (!($size & 7)) { goto u67n6; } goto zfxmP; fuZ0Y: $j = 0; goto DiWm4; vWvXw: $j++; goto CUdd0; AxOLg: $v |= $this->data[$p]; goto qdvZq; RmXP0: $p = 0; goto QTZjl; S9QHN: tFUE0: goto bsNgD; X0jn9: tjrXx: goto v5TNo; oWgSf: EDjR0: goto G0JDp; GB2OQ: $p++; goto ASVqf; P_pcU: $size = $this->size(); goto nhFtr; Vyy_p: $data[$bytes] = $v; goto mX6Ei; TVBCm: if (!($j < 8)) { goto tFUE0; } goto reTid; yV7rR: $j++; goto XJ0QF; kkavM: $j = 0; goto dnKLJ; nk2zq: QVqoT: goto rzKAF; QTZjl: $i = 0; goto nk2zq; CUdd0: goto pZsQ9; goto zXvEO; qdvZq: $p++; goto vvCf2; ASVqf: svgjp: goto vWvXw; i0NKn: } } goto SINw9; jDC4R: define("\x51\x52\137\104\105\106\x41\x55\114\x54\137\115\x41\123\113", 2); goto yvexH; jYtLD: class QRcode { public $version; public $width; public $data; public function encodeMask(QRinput $input, $mask) { goto Kc9rc; IFN96: return NULL; goto Mk2D7; YV5tn: goto zqayb; goto d8liW; dyu7X: goto ejlRZ; goto s0TDs; meotv: yVW1N: goto EvcPN; qbdMx: $i = 0; goto vkhpu; hRO8V: if (!($i < $raw->dataLength + $raw->eccLength)) { goto Jxe7s; } goto tpsgF; Qr7yE: QRtools::markTime("\141\146\x74\x65\x72\137\x72\x61\167"); goto PnWcb; dj0s2: $i++; goto dGj4y; gmFZI: tOZCc: goto MFnDQ; DxtCS: $this->width = $width; goto JJAN5; uD13N: if (!($j < 8)) { goto qn3c7; } goto r65WA; ysdSX: ETfjz: goto Dfi0_; wOPp9: unset($raw); goto UHGc4; EvcPN: $i++; goto YV5tn; q1jE0: return $this; goto c8FuF; r65WA: $addr = $filler->next(); goto PKzQg; KjgFo: $j = 0; goto k8k7B; nE2zK: RYM7Z: goto m91tb; C3CRP: $i = 0; goto S2NK1; eFjwj: $width = QRspec::getWidth($version); goto NZ40J; XcSWW: if (!($masked == NULL)) { goto cW51P; } goto MgtbC; pAeK_: $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()); goto kLurh; StwN_: nc04v: goto wlwgi; Scrua: if ($mask < 0) { goto RYM7Z; } goto pAeK_; U4wtQ: FNwYn: goto Q3_QE; s0TDs: qn3c7: goto meotv; PnWcb: $version = $raw->version; goto eFjwj; vkhpu: F1mI4: goto Z2sqw; Q7q43: goto tOZCc; goto StwN_; qrpw4: $raw = new QRrawcode($input); goto Qr7yE; dGj4y: goto F1mI4; goto jFz6B; PKzQg: $filler->setFrameAt($addr, 0x2 | ($bit & $code) != 0); goto dKpyi; NZ40J: $frame = QRspec::newFrame($version); goto GX47j; k8k7B: ejlRZ: goto uD13N; MgtbC: return NULL; goto fQRDn; xQrXY: $frame = $filler->frame; goto tx8KX; kLurh: goto Zh5zT; goto nE2zK; njm3E: $this->version = $version; goto DxtCS; Q3_QE: if (!($input->getErrorCorrectionLevel() > QR_ECLEVEL_H)) { goto j1bsS; } goto ZEC13; cp9hC: PFkcI: goto dj0s2; Z2sqw: if (!($i < $j)) { goto RytY6; } goto s8JuL; tpsgF: $code = $raw->getCode(); goto n9Ykc; wlwgi: $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()); goto gmFZI; tx8KX: unset($filler); goto NLTd9; NluWx: $masked = $maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK) % 8, $input->getErrorCorrectionLevel()); goto Q7q43; IfdMj: $filler->setFrameAt($addr, 0x2); goto cp9hC; fQRDn: cW51P: goto PwW7S; sJ8BK: if (!is_null($filler)) { goto WOyGR; } goto IFN96; GX47j: $filler = new FrameFiller($width, $frame); goto sJ8BK; MFnDQ: Zh5zT: goto XcSWW; Dfi0_: $j++; goto dyu7X; ZEC13: throw new Exception("\x77\162\157\x6e\147\x20\154\x65\x76\x65\154"); goto ENrPB; UHGc4: $j = QRspec::getRemainder($version); goto qbdMx; ENrPB: j1bsS: goto qrpw4; d8liW: Jxe7s: goto kWuvi; s8JuL: $addr = $filler->next(); goto IfdMj; m91tb: if (QR_FIND_BEST_MASK) { goto nc04v; } goto NluWx; PwW7S: QRtools::markTime("\141\x66\x74\145\x72\137\155\141\163\x6b"); goto njm3E; S2NK1: zqayb: goto hRO8V; jFz6B: RytY6: goto xQrXY; Mk2D7: WOyGR: goto C3CRP; NLTd9: $maskObj = new QRmask(); goto Scrua; dKpyi: $bit = $bit >> 1; goto ysdSX; n9Ykc: $bit = 0x80; goto KjgFo; Kc9rc: if (!($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX)) { goto FNwYn; } goto hjjOh; kWuvi: QRtools::markTime("\141\146\164\145\x72\x5f\x66\151\154\x6c\145\162"); goto wOPp9; JJAN5: $this->data = $masked; goto q1jE0; hjjOh: throw new Exception("\x77\x72\x6f\156\x67\40\x76\145\162\x73\151\157\156"); goto U4wtQ; c8FuF: } public function encodeInput(QRinput $input) { return $this->encodeMask($input, -1); } public function encodeString8bit($string, $version, $level) { goto bvuWQ; HTw01: return NULL; goto soIy3; bAhuw: if (!($input == NULL)) { goto K8WIs; } goto RdZzu; FF4lW: return NULL; goto sJgxZ; sJgxZ: vRZex: goto aAJFF; g9jQ3: K8WIs: goto BeC0E; QxpbS: if (!($ret < 0)) { goto vRZex; } goto HMK4S; QgsLH: $input = new QRinput($version, $level); goto bAhuw; HMK4S: unset($input); goto FF4lW; soIy3: dvjxZ: goto QgsLH; bvuWQ: if (!(string == NULL)) { goto dvjxZ; } goto EgUa9; aAJFF: return $this->encodeInput($input); goto xZccp; BeC0E: $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string)); goto QxpbS; EgUa9: throw new Exception("\x65\155\160\164\x79\x20\163\x74\x72\151\x6e\147\41"); goto HTw01; RdZzu: return NULL; goto g9jQ3; xZccp: } public function encodeString($string, $version, $level, $hint, $casesensitive) { goto lmGhR; z0h7I: return $this->encodeInput($input); goto t7Vpl; uISeZ: if (!($input == NULL)) { goto GMZS2; } goto JeDFc; CcRRv: if (!($ret < 0)) { goto H9TbD; } goto HSZBz; JeDFc: return NULL; goto Y3pUd; PhgEx: throw new Exception("\142\x61\144\40\150\151\x6e\164"); goto tIz01; xK4Aq: $input = new QRinput($version, $level); goto uISeZ; sV7mG: $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive); goto CcRRv; mpMF0: RqjPy: goto xK4Aq; HSZBz: return NULL; goto DIO7P; tIz01: return NULL; goto mpMF0; Y3pUd: GMZS2: goto sV7mG; DIO7P: H9TbD: goto z0h7I; lmGhR: if (!($hint != QR_MODE_8 && $hint != QR_MODE_KANJI)) { goto RqjPy; } goto PhgEx; t7Vpl: } public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodePNG($text, $outfile, $saveandprint = false); } public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encode($text, $outfile); } public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodeRAW($text, $outfile); } } goto XSb0j; ol_bb: define("\121\122\137\x4d\x4f\104\x45\137\70", 2); goto NQLh0; l61rO: define("\x51\x52\137\103\101\x43\x48\105\137\104\111\x52", false); goto pmzRv; NQLh0: define("\x51\122\x5f\115\117\x44\x45\x5f\113\x41\x4e\112\111", 3); goto TifFO; n3pCp: define("\121\122\x5f\x46\117\x52\x4d\101\124\x5f\x54\x45\130\124", 0); goto FXNp2; icuGF: define("\121\x52\x43\x41\x50\137\x57\117\x52\x44\123", 1); goto cdYTm; XSb0j: class FrameFiller { public $width; public $frame; public $x; public $y; public $dir; public $bit; public function __construct($width, &$frame) { goto JCEuB; yYMCI: $this->y = $width - 1; goto muOlY; muOlY: $this->dir = -1; goto JkGUK; JkGUK: $this->bit = -1; goto t9YIW; kR9D4: $this->frame = $frame; goto A26px; A26px: $this->x = $width - 1; goto yYMCI; JCEuB: $this->width = $width; goto kR9D4; t9YIW: } public function setFrameAt($at, $val) { $this->frame[$at["\x79"]][$at["\x78"]] = chr($val); } public function getFrameAt($at) { return ord($this->frame[$at["\171"]][$at["\170"]]); } public function next() { goto EI25q; EI25q: t2eXN: goto sUGSt; A278J: WHsF6: goto zSFap; VHMf2: if (!($x < 0 || $y < 0)) { goto P8JiG; } goto XmbhS; JNgjd: goto rGGG9; goto YcLl0; AowU7: $w = $this->width; goto JdrKp; Vcemr: ufHKS: goto U2Fjn; pSDe9: return array("\170" => $this->x, "\171" => $this->y); goto xfSsp; cpbIo: $this->bit--; goto JNgjd; LP5rW: if (!($y == $w)) { goto E2g_C; } goto bRuM9; zSFap: E7tWR: goto VHMf2; pYadw: if (!($x == 6)) { goto ufHKS; } goto dSrIP; onXgL: $y -= 8; goto Vcemr; L3MuV: $y = 0; goto NpY96; GbvjM: $x--; goto SArYA; dSrIP: $x--; goto onXgL; l9nQ4: $y += $this->dir; goto cpbIo; woAdA: if (ord($this->frame[$y][$x]) & 0x80) { goto t2eXN; } goto flw1a; sUGSt: if (!($this->bit == -1)) { goto rhBiA; } goto B5Rtx; ROj49: $this->dir = -1; goto pYadw; flw1a: yvea_: goto Hjm1B; Iba7L: $y = $this->y; goto AowU7; U2Fjn: E2g_C: goto EHakF; UTZF6: $x++; goto l9nQ4; PSkV3: $this->y = $y; goto woAdA; W07iA: yBceg: goto A278J; SArYA: $y = 9; goto W07iA; KLXwf: b8wfq: goto Nwekq; NpY96: $x -= 2; goto xy_KZ; p5iqA: rGGG9: goto B3aah; B3aah: if ($this->dir < 0) { goto b8wfq; } goto LP5rW; Xb6ot: $x = $this->x; goto Iba7L; kahev: $this->bit++; goto p5iqA; SK9Gx: $x--; goto kahev; FeC3f: $x -= 2; goto ROj49; xy_KZ: $this->dir = 1; goto tM3El; XmbhS: return null; goto kFbVm; JdrKp: if ($this->bit == 0) { goto gZoCN; } goto UTZF6; uFSnU: $this->x = $x; goto PSkV3; kFbVm: P8JiG: goto uFSnU; YcLl0: gZoCN: goto SK9Gx; B5Rtx: $this->bit = 0; goto pSDe9; Hjm1B: return array("\x78" => $x, "\171" => $y); goto XcIsP; Nwekq: if (!($y < 0)) { goto WHsF6; } goto L3MuV; tM3El: if (!($x == 6)) { goto yBceg; } goto GbvjM; xfSsp: rhBiA: goto Xb6ot; bRuM9: $y = $w - 1; goto FeC3f; EHakF: goto E7tWR; goto KLXwf; XcIsP: } } goto BXRn7; KYu0R: define("\121\122\137\115\x4f\x44\105\137\101\x4e", 1); goto ol_bb; SCJbv: class QRinput { public $items; private $version; private $level; public function __construct($version = 0, $level = QR_ECLEVEL_L) { goto mzWPo; xQCfr: throw new Exception("\x49\156\x76\x61\154\x69\x64\x20\x76\145\x72\x73\x69\x6f\x6e\40\x6e\x6f"); goto OXFFI; OXFFI: return NULL; goto DfgWS; w6Qhk: $this->level = $level; goto WGY61; xzSc5: $this->version = $version; goto w6Qhk; mzWPo: if (!($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H)) { goto fVxE7; } goto xQCfr; DfgWS: fVxE7: goto xzSc5; WGY61: } public function getVersion() { return $this->version; } public function setVersion($version) { goto guV3k; MluaC: $this->version = $version; goto ZVXua; kPPQM: return -1; goto Mgp9e; DWwnF: throw new Exception("\x49\x6e\x76\x61\x6c\x69\x64\40\x76\x65\162\x73\x69\x6f\156\40\156\x6f"); goto kPPQM; Mgp9e: g_h3g: goto MluaC; ZVXua: return 0; goto QiVr3; guV3k: if (!($version < 0 || $version > QRSPEC_VERSION_MAX)) { goto g_h3g; } goto DWwnF; QiVr3: } public function getErrorCorrectionLevel() { return $this->level; } public function setErrorCorrectionLevel($level) { goto TV4r7; GJMo2: $this->level = $level; goto Oai4K; n9bJz: return -1; goto tFd8f; Oai4K: return 0; goto G5MEE; OUUUr: throw new Exception("\111\156\x76\x61\154\151\x64\x20\105\x43\114\x45\126\x45\x4c"); goto n9bJz; TV4r7: if (!($level > QR_ECLEVEL_H)) { goto p02tV; } goto OUUUr; tFd8f: p02tV: goto GJMo2; G5MEE: } public function appendEntry(QRinputItem $entry) { $this->items[] = $entry; } public function append($mode, $size, $data) { try { goto K9j0P; K9j0P: $entry = new QRinputItem($mode, $size, $data); goto OJLel; OJLel: $this->items[] = $entry; goto mAV3_; mAV3_: return 0; goto vqVnA; vqVnA: } catch (Exception $e) { return -1; } } public function insertStructuredAppendHeader($size, $index, $parity) { goto IOvMG; fG1FX: throw new Exception("\x69\x6e\x73\x65\x72\164\123\x74\162\x75\143\164\x75\x72\x65\144\x41\160\160\145\156\x64\x48\x65\141\x64\145\x72\x20\x77\x72\x6f\x6e\x67\40\x69\x6e\144\x65\x78"); goto X12kJ; VDLSm: throw new Exception("\x69\x6e\163\x65\162\164\123\164\162\x75\x63\164\x75\x72\x65\x64\101\160\160\145\156\144\x48\x65\x61\144\145\162\40\167\x72\157\156\147\x20\163\151\x7a\145"); goto OjlJm; wPp4C: $buf = array($size, $index, $parity); goto uWqih; X12kJ: TbpAQ: goto wPp4C; uWqih: try { goto EHhYV; ZArPr: array_unshift($this->items, $entry); goto uGia9; EHhYV: $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf); goto ZArPr; uGia9: return 0; goto qvbV2; qvbV2: } catch (Exception $e) { return -1; } goto MmWzI; OjlJm: Z_omO: goto AuGRc; IOvMG: if (!($size > MAX_STRUCTURED_SYMBOLS)) { goto Z_omO; } goto VDLSm; AuGRc: if (!($index <= 0 || $index > MAX_STRUCTURED_SYMBOLS)) { goto TbpAQ; } goto fG1FX; MmWzI: } public function calcParity() { goto QaC2n; QaC2n: $parity = 0; goto QcvTf; JdY1Q: m1j07: goto oemke; oemke: return $parity; goto lix3R; QcvTf: foreach ($this->items as $item) { goto Vu_ex; QDIjF: goto QmTxF; goto aoBqy; QOEk5: if (!($i >= 0)) { goto c5uJU; } goto IhiUP; RwkGG: NJjbg: goto wSSrv; IhiUP: $parity ^= $item->data[$i]; goto RwkGG; YA64y: $i = $item->size - 1; goto r1VVz; GcWOn: ALs4f: goto RKN7M; spzVE: U_0t0: goto GcWOn; r1VVz: QmTxF: goto QOEk5; wSSrv: $i--; goto QDIjF; aoBqy: c5uJU: goto spzVE; Vu_ex: if (!($item->mode != QR_MODE_STRUCTURE)) { goto U_0t0; } goto YA64y; RKN7M: } goto JdY1Q; lix3R: } public static function checkModeNum($size, $data) { goto NzYZP; yjtUm: if (!(ord($data[$i]) < ord("\x30") || ord($data[$i]) > ord("\x39"))) { goto JBRBz; } goto hdTjI; hdTjI: return false; goto wNInm; NzYZP: $i = 0; goto O22uD; O22uD: R1WBj: goto XqddV; XqddV: if (!($i < $size)) { goto uNidX; } goto yjtUm; YDsSx: jWegh: goto WYt39; wNInm: JBRBz: goto YDsSx; bWgTx: uNidX: goto Gb_Ax; Gb_Ax: return true; goto UJNfm; mc77U: goto R1WBj; goto bWgTx; WYt39: $i++; goto mc77U; UJNfm: } public static function estimateBitsModeNum($size) { goto hc0op; t7Qzn: return $bits; goto vTG9O; h9t0O: switch ($size - $w * 3) { case 1: $bits += 4; goto ev7C0; case 2: $bits += 7; goto ev7C0; default: goto ev7C0; } goto mKgSF; LsY_r: $bits = $w * 10; goto h9t0O; FDu0l: ev7C0: goto t7Qzn; hc0op: $w = (int) $size / 3; goto LsY_r; mKgSF: JfF01: goto FDu0l; vTG9O: } public static $anTable = array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1); public static function lookAnTable($c) { return $c > 127 ? -1 : self::$anTable[$c]; } public static function checkModeAn($size, $data) { goto iTmzP; iTmzP: $i = 0; goto DWrYA; VT5Ow: $i++; goto Tr_ZP; TuH4a: t8woF: goto dDe8n; zwg7S: if (!(self::lookAnTable(ord($data[$i])) == -1)) { goto lvuwO; } goto L4U6J; OsOZ6: lvuwO: goto S9uDe; L4U6J: return false; goto OsOZ6; DWrYA: JGvVq: goto nEXKe; nEXKe: if (!($i < $size)) { goto t8woF; } goto zwg7S; Tr_ZP: goto JGvVq; goto TuH4a; S9uDe: SNnBr: goto VT5Ow; dDe8n: return true; goto NPzK9; NPzK9: } public static function estimateBitsModeAn($size) { goto szX45; jzhqP: return $bits; goto GfwdG; ppHwq: $bits += 6; goto gFd22; gFd22: i7dM4: goto jzhqP; YCGbm: if (!($size & 1)) { goto i7dM4; } goto ppHwq; EIqGT: $bits = $w * 11; goto YCGbm; szX45: $w = (int) ($size / 2); goto EIqGT; GfwdG: } public static function estimateBitsMode8($size) { return $size * 8; } public function estimateBitsModeKanji($size) { return (int) ($size / 2 * 13); } public static function checkModeKanji($size, $data) { goto u0kBn; kptkY: goto WsQjE; goto WMMpw; MU_Wv: $i += 2; goto kptkY; oUhgk: WsQjE: goto psnW7; fJTr7: return true; goto no7hN; PZ9Ds: cN0F6: goto MU_Wv; psnW7: if (!($i < $size)) { goto p3LtI; } goto Kqmh3; WMMpw: p3LtI: goto fJTr7; Kqmh3: $val = ord($data[$i]) << 8 | ord($data[$i + 1]); goto tHLkF; UdMV3: $i = 0; goto oUhgk; W_DkY: return false; goto FBUjy; S0gUU: umm60: goto UdMV3; u0kBn: if (!($size & 1)) { goto umm60; } goto HPGxG; FBUjy: oYJ9w: goto PZ9Ds; tHLkF: if (!($val < 0x8140 || $val > 0x9ffc && $val < 0xe040 || $val > 0xebbf)) { goto oYJ9w; } goto W_DkY; HPGxG: return false; goto S0gUU; no7hN: } public static function check($mode, $size, $data) { goto REo0X; l4Oop: roTUV: goto CiysW; eG7ln: switch ($mode) { case QR_MODE_NUM: return self::checkModeNum($size, $data); goto h33OY; case QR_MODE_AN: return self::checkModeAn($size, $data); goto h33OY; case QR_MODE_KANJI: return self::checkModeKanji($size, $data); goto h33OY; case QR_MODE_8: return true; goto h33OY; case QR_MODE_STRUCTURE: return true; goto h33OY; default: goto h33OY; } goto l4Oop; CiysW: h33OY: goto J6GsS; kiFua: zUqP1: goto eG7ln; REo0X: if (!($size <= 0)) { goto zUqP1; } goto MJ7QD; J6GsS: return false; goto dZeIc; MJ7QD: return false; goto kiFua; dZeIc: } public function estimateBitStreamSize($version) { goto bfPrT; y78nf: foreach ($this->items as $item) { $bits += $item->estimateBitStreamSizeOfEntry($version); MD1Pb: } goto AmNYF; bfPrT: $bits = 0; goto y78nf; AmNYF: E9lHu: goto TWfnu; TWfnu: return $bits; goto pAPNt; pAPNt: } public function estimateVersion() { goto ec6uO; ao0Jr: $version = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto HrMj7; TaSjq: YsrnO: goto KzutR; KzutR: $prev = $version; goto VBl1o; oiKWJ: if ($version > $prev) { goto YsrnO; } goto oBDYe; oQTeW: bYchF: goto oiKWJ; lSAZ4: return $version; goto PUWrQ; z2XX8: return -1; goto oQTeW; HrMj7: if (!($version < 0)) { goto bYchF; } goto z2XX8; ec6uO: $version = 0; goto lx4dZ; oBDYe: zX6Si: goto lSAZ4; lx4dZ: $prev = 0; goto TaSjq; VBl1o: $bits = $this->estimateBitStreamSize($prev); goto ao0Jr; PUWrQ: } public static function lengthOfCode($mode, $version, $bits) { goto eHkgs; ojKEf: r7Qah: goto GbSKQ; xFmG_: $size = $maxsize; goto zyDYF; VD0Vv: if (!($size < 0)) { goto rJxFq; } goto dHlt8; eHkgs: $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version); goto OLA6m; zyDYF: poeV2: goto INENU; NNp8L: cfUlJ: goto ojKEf; INENU: return $size; goto JQCBV; L18Xl: if (!($size > $maxsize)) { goto poeV2; } goto xFmG_; OLA6m: switch ($mode) { case QR_MODE_NUM: goto l7yBn; zs3Dz: rmK1h: goto Bjsrj; eP1f9: zdDbv: goto J4awU; Bjsrj: $size += 2; goto eP1f9; Ivde7: if (!($remain >= 4)) { goto Yw7PK; } goto CSO8K; l7yBn: $chunks = (int) ($payload / 10); goto YO5nR; J4awU: goto r7Qah; goto QeRAK; ajEmT: goto zdDbv; goto zs3Dz; tzDrV: Yw7PK: goto ajEmT; YO5nR: $remain = $payload - $chunks * 10; goto sU9Ij; y5Z5r: if ($remain >= 7) { goto rmK1h; } goto Ivde7; sU9Ij: $size = $chunks * 3; goto y5Z5r; CSO8K: $size += 1; goto tzDrV; QeRAK: case QR_MODE_AN: goto mjHNM; dz0tb: if (!($remain >= 6)) { goto Rrm9c; } goto NSLfR; mjHNM: $chunks = (int) ($payload / 11); goto WcypR; JLlWh: $size = $chunks * 2; goto dz0tb; WcypR: $remain = $payload - $chunks * 11; goto JLlWh; OzoNa: goto r7Qah; goto rNctZ; XOtk8: Rrm9c: goto OzoNa; NSLfR: $size++; goto XOtk8; rNctZ: case QR_MODE_8: $size = (int) ($payload / 8); goto r7Qah; case QR_MODE_KANJI: $size = (int) ($payload / 13 * 2); goto r7Qah; case QR_MODE_STRUCTURE: $size = (int) ($payload / 8); goto r7Qah; default: $size = 0; goto r7Qah; } goto NNp8L; GbSKQ: $maxsize = QRspec::maximumWords($mode, $version); goto VD0Vv; dHlt8: $size = 0; goto mDkaq; mDkaq: rJxFq: goto L18Xl; JQCBV: } public function createBitStream() { goto mefak; dUBbm: PHT5f: goto eJ35N; bCEPO: foreach ($this->items as $item) { goto bI6yb; nXo7I: $total += $bits; goto QQ53x; QQ53x: b_GnN: goto OcMkT; inKmd: J5aMy: goto nXo7I; bI6yb: $bits = $item->encodeBitStream($this->version); goto ekX6A; ekX6A: if (!($bits < 0)) { goto J5aMy; } goto fRUgX; fRUgX: return -1; goto inKmd; OcMkT: } goto dUBbm; eJ35N: return $total; goto cIeZf; mefak: $total = 0; goto bCEPO; cIeZf: } public function convertData() { goto sk2Rp; ej7mp: IA8VO: goto QqbRT; XTDvK: gEstY: goto v7hzA; qf74D: if (!($bits < 0)) { goto P475n; } goto LqTI8; ViaJu: noXLL: goto rMXqZ; qnqPU: $this->setVersion($ver); goto p1bU5; rMXqZ: goto ZEw2L; goto XTDvK; LqTI8: return -1; goto r5gMh; EX__M: ZEw2L: goto EOXg3; tc0TO: if ($ver > $this->getVersion()) { goto IA8VO; } goto jqYdL; v7hzA: return 0; goto pJu3T; r5gMh: P475n: goto AMi2W; aXpWF: goto A3ddl; goto ej7mp; QqbRT: $this->setVersion($ver); goto TNqfd; PRhG2: return -1; goto Fplo2; K1pfO: if ($ver < 0) { goto p7pBl; } goto tc0TO; p1bU5: SlFaI: goto EX__M; jqYdL: goto gEstY; goto aXpWF; EOXg3: $bits = $this->createBitStream(); goto qf74D; sk2Rp: $ver = $this->estimateVersion(); goto ZF572; Fplo2: l0C_4: goto ViaJu; ZF572: if (!($ver > $this->getVersion())) { goto SlFaI; } goto qnqPU; AMi2W: $ver = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto K1pfO; TNqfd: A3ddl: goto WCQ82; HSIW_: throw new Exception("\x57\x52\x4f\x4e\x47\x20\126\105\122\123\111\x4f\116"); goto PRhG2; Oahy1: p7pBl: goto HSIW_; WCQ82: goto l0C_4; goto Oahy1; pJu3T: } public function appendPaddingBit(&$bstream) { goto R60jk; R60jk: $bits = $bstream->size(); goto Hgke9; pnl0W: ux5uB: goto NNXc5; nu6MP: if (!($ret < 0)) { goto ux5uB; } goto VbVAX; ZhXpR: Yt4o0: goto cLUKN; K86fE: $ret = $bstream->append($padding); goto x0lL1; yEese: return $ret; goto KrtjV; Q1U03: if (!($maxbits - $bits < 5)) { goto KNOIY; } goto B5iF0; Ki6Wi: $padding = new QRbitstream(); goto n3fLV; yVLbT: $i = 0; goto ZhXpR; cLUKN: if (!($i < $padlen)) { goto C2NDk; } goto lwWSf; el3Qf: $padbuf = array(); goto yVLbT; r5b3y: $ret = $padding->appendBytes($padlen, $padbuf); goto g9XEp; MRm9Z: if (!($padlen > 0)) { goto dj96B; } goto el3Qf; lwWSf: $padbuf[$i] = $i & 1 ? 0x11 : 0xec; goto QpKy2; ht3vE: if (!($maxbits == $bits)) { goto ld2dT; } goto YKTnu; p77ew: $maxbits = $maxwords * 8; goto ht3vE; j0P5K: C2NDk: goto r5b3y; YKTnu: return 0; goto A7G76; r2YCv: dj96B: goto K86fE; Hgke9: $maxwords = QRspec::getDataLength($this->version, $this->level); goto p77ew; NNXc5: $padlen = $maxwords - $words; goto MRm9Z; n3fLV: $ret = $padding->appendNum($words * 8 - $bits + 4, 0); goto nu6MP; KrtjV: KJ0Y2: goto r2YCv; ubbsN: $bits += 4; goto t9rV3; x0lL1: return $ret; goto m83rL; st4XP: KNOIY: goto ubbsN; A7G76: ld2dT: goto Q1U03; RNFGG: goto Yt4o0; goto j0P5K; QpKy2: XL7K6: goto q37QE; t9rV3: $words = (int) (($bits + 7) / 8); goto Ki6Wi; q37QE: $i++; goto RNFGG; B5iF0: return $bstream->appendNum($maxbits - $bits, 0); goto st4XP; g9XEp: if (!($ret < 0)) { goto KJ0Y2; } goto yEese; VbVAX: return $ret; goto pnl0W; m83rL: } public function mergeBitStream() { goto a3d8U; hUBYN: foreach ($this->items as $item) { goto Bkteu; XpTxa: tRnfy: goto wKR0k; Bkteu: $ret = $bstream->append($item->bstream); goto aRUnj; wKR0k: avX__: goto mn78v; PWTQH: return null; goto XpTxa; aRUnj: if (!($ret < 0)) { goto tRnfy; } goto PWTQH; mn78v: } goto R5P7Y; R5P7Y: BUa5d: goto nVeLR; nVeLR: return $bstream; goto GUF4l; dFpU0: uMLMJ: goto T18mS; Gm6lB: return null; goto dFpU0; T18mS: $bstream = new QRbitstream(); goto hUBYN; a3d8U: if (!($this->convertData() < 0)) { goto uMLMJ; } goto Gm6lB; GUF4l: } public function getBitStream() { goto PLKmJ; QsI7N: if (!($bstream == null)) { goto zuJqw; } goto w37Xf; Y6wLw: return $bstream; goto g3y2a; m8Xnc: return null; goto B99Jx; PLKmJ: $bstream = $this->mergeBitStream(); goto QsI7N; V2Xj5: zuJqw: goto b23iF; b23iF: $ret = $this->appendPaddingBit($bstream); goto WKwj9; w37Xf: return null; goto V2Xj5; B99Jx: sUpU1: goto Y6wLw; WKwj9: if (!($ret < 0)) { goto sUpU1; } goto m8Xnc; g3y2a: } public function getByteStream() { goto jrNIU; OJo7D: pBc57: goto bNSGz; jrNIU: $bstream = $this->getBitStream(); goto eOote; i5WFD: return null; goto OJo7D; eOote: if (!($bstream == null)) { goto pBc57; } goto i5WFD; bNSGz: return $bstream->toByte(); goto WBjFS; WBjFS: } } goto bkzOy; cdYTm: define("\121\x52\103\101\120\137\x52\x45\115\111\116\x44\105\122", 2); goto SqKyQ; eIi2a: define("\121\122\137\105\103\x4c\x45\126\x45\114\137\110", 3); goto n3pCp; vj89A: class qrstr { public static function set(&$srctab, $x, $y, $repl, $replLen = false) { $srctab[$y] = substr_replace($srctab[$y], $replLen !== false ? substr($repl, 0, $replLen) : $repl, $x, $replLen !== false ? $replLen : strlen($repl)); } } goto ceiyQ; YkWiX: define("\121\x52\137\x46\111\116\x44\137\102\105\123\x54\x5f\115\x41\123\x4b", true); goto OAcEY; uhLvj: define("\x53\124\x52\x55\x43\124\x55\x52\x45\x5f\x48\105\x41\x44\105\x52\137\x42\111\124\x53", 20); goto kz61H; kz61H: define("\x4d\101\130\137\123\x54\122\x55\x43\124\x55\x52\105\x44\137\x53\x59\115\x42\x4f\114\x53", 16); goto g7iWT; yvexH: define("\x51\122\137\120\116\x47\x5f\115\101\130\x49\x4d\125\x4d\137\123\111\x5a\x45", 1024); goto rWyNC; OqVjk: define("\x51\122\x5f\x45\103\114\x45\126\105\114\137\x4c", 0); goto xe7X3; pZ5Bp: class QRrsblock { public $dataLength; public $data = array(); public $eccLength; public $ecc = array(); public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs) { goto qgRa7; Hi9FM: $this->eccLength = $el; goto g3ZzI; qgRa7: $rs->encode_rs_char($data, $ecc); goto gLnqW; gLnqW: $this->dataLength = $dl; goto WHiol; WHiol: $this->data = $data; goto Hi9FM; g3ZzI: $this->ecc = $ecc; goto VnnF0; VnnF0: } } goto k8ZZb; TifFO: define("\121\122\137\115\117\x44\x45\x5f\x53\124\x52\x55\x43\124\x55\x52\105", 4); goto OqVjk; SV2SQ: define("\x51\x52\123\120\105\103\x5f\127\x49\104\x54\110\x5f\115\101\x58", 177); goto fPEN8; onday: define("\121\122\x5f\x45\103\114\105\126\105\x4c\137\121", 2); goto eIi2a; HrCE7: QRtools::markTime("\163\x74\141\162\164"); goto ve2De; dT0pf: define("\x51\122\137\x4d\117\x44\105\137\116\x55\x4c", -1); goto edcA7; xe7X3: define("\x51\122\x5f\105\103\114\105\126\105\114\137\x4d", 1); goto onday; Z_4Yh: define("\x51\122\x5f\111\115\x41\107\x45", true); goto BrqLZ; BrqLZ: class QRimage { public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4, $saveandprint = FALSE) { goto F0j5A; zqEvc: header("\x43\x6f\x6e\164\x65\x6e\x74\55\x74\x79\160\145\72\40\151\155\141\x67\x65\x2f\x70\x6e\x67"); goto L9qW6; WUuwu: ImageDestroy($image); goto yIt5h; Zlnri: if ($saveandprint === TRUE) { goto sEa_2; } goto P2tIc; WAVOY: ImagePng($image, $filename); goto zqEvc; Axqmc: kXvHh: goto gvi1E; F0j5A: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto yt6zE; P2tIc: ImagePng($image, $filename); goto noi2c; yjV_I: goto OiDz1; goto Axqmc; gvi1E: Header("\x43\157\x6e\164\145\156\164\55\x74\x79\160\145\72\40\x69\x6d\141\x67\145\57\x70\x6e\x67"); goto xaSEG; qHE4d: sEa_2: goto WAVOY; xaSEG: ImagePng($image); goto VcHGw; L9qW6: ImagePng($image); goto BFYVQ; yt6zE: if ($filename === false) { goto kXvHh; } goto Zlnri; VcHGw: OiDz1: goto WUuwu; BFYVQ: xlU4o: goto yjV_I; noi2c: goto xlU4o; goto qHE4d; yIt5h: } public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85) { goto W3nEs; C7hCX: Header("\x43\157\156\x74\x65\x6e\x74\x2d\x74\x79\160\x65\72\x20\x69\x6d\141\147\145\x2f\x6a\160\x65\147"); goto gI833; gI833: ImageJpeg($image, null, $q); goto JmxEj; IzbJy: ImageDestroy($image); goto BJhFS; tqp6C: ZO29c: goto C7hCX; W3nEs: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto uAUYc; JmxEj: aIGsZ: goto IzbJy; uAUYc: if ($filename === false) { goto ZO29c; } goto kYH4L; kYH4L: ImageJpeg($image, $filename, $q); goto GaEiy; GaEiy: goto aIGsZ; goto tqp6C; BJhFS: } private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4) { goto OSi0W; domu3: m37VI: goto VPlc2; XJsD5: pT6Q7: goto pXxNE; hCxW8: $col[1] = ImageColorAllocate($base_image, 0, 0, 0); goto OYfwC; OYfwC: imagefill($base_image, 0, 0, $col[0]); goto ewuKa; JNncf: wNfG_: goto F3m3v; itfou: $imgH = $h + 2 * $outerFrame; goto B9PxH; b6D1x: $col[0] = ImageColorAllocate($base_image, 255, 255, 255); goto hCxW8; ZQz4E: $x++; goto d1vrZ; OSi0W: $h = count($frame); goto SGAoi; F3m3v: $y++; goto NphDX; SGAoi: $w = strlen($frame[0]); goto TOAdv; ewuKa: $y = 0; goto domu3; B9PxH: $base_image = ImageCreate($imgW, $imgH); goto b6D1x; Qn8f1: if (!($x < $w)) { goto udoJL; } goto FTcGy; FTcGy: if (!($frame[$y][$x] == "\61")) { goto pT6Q7; } goto aOm3d; DB706: ImageCopyResized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH); goto WoVVN; VfOg3: udoJL: goto JNncf; hPMEy: gvtYm: goto jtci6; Yp9k9: return $target_image; goto QuW20; DUHIf: oyymB: goto Qn8f1; lwhSw: $x = 0; goto DUHIf; WoVVN: ImageDestroy($base_image); goto Yp9k9; jtci6: $target_image = ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint); goto DB706; NphDX: goto m37VI; goto hPMEy; pXxNE: i_7Gp: goto ZQz4E; aOm3d: ImageSetPixel($base_image, $x + $outerFrame, $y + $outerFrame, $col[1]); goto XJsD5; VPlc2: if (!($y < $h)) { goto gvtYm; } goto lwhSw; d1vrZ: goto oyymB; goto VfOg3; TOAdv: $imgW = $w + 2 * $outerFrame; goto itfou; QuW20: } } goto uhLvj; rWyNC: class QRtools { public static function binarize($frame) { goto Czows; rHzcs: foreach ($frame as &$frameLine) { goto vAKjv; iwTWo: goto anhWn; goto uRa7m; uRa7m: Dltf2: goto HHTum; Ka0z4: qep62: goto t3n2_; t3n2_: $i++; goto iwTWo; vAKjv: $i = 0; goto TRhr7; EYfxu: if (!($i < $len)) { goto Dltf2; } goto KlRdl; KlRdl: $frameLine[$i] = ord($frameLine[$i]) & 1 ? "\61" : "\60"; goto Ka0z4; HHTum: UEBGE: goto fvrBh; TRhr7: anhWn: goto EYfxu; fvrBh: } goto kilWj; kilWj: olibv: goto D78jx; D78jx: return $frame; goto TXs8W; Czows: $len = count($frame); goto rHzcs; TXs8W: } public static function tcpdfBarcodeArray($code, $mode = "\x51\x52\x2c\x4c", $tcPdfVersion = "\64\x2e\x35\56\x30\63\x37") { goto GF6LX; O2Q3C: $eccLevel = "\114"; goto uX4EU; EQy5s: $barcode_array["\x6e\165\155\x5f\x63\157\x6c\163"] = $size; goto cZezR; uTpEA: $size = count($qrTab); goto Z3KUX; kTynS: KEsMZ: goto j1U6t; cZezR: $barcode_array["\142\143\x6f\144\145"] = array(); goto hMOA6; v5PBq: $eccLevel = $mode[1]; goto kTynS; TGauc: xRQza: goto O2Q3C; SRKYG: $mode = explode("\54", $mode); goto TGauc; Z3KUX: $barcode_array["\x6e\165\155\137\162\157\167\163"] = $size; goto EQy5s; GF6LX: $barcode_array = array(); goto gBmXI; gBmXI: if (is_array($mode)) { goto xRQza; } goto SRKYG; oCbjH: return $barcode_array; goto RHkCj; HUlOV: OZxk3: goto oCbjH; uX4EU: if (!(count($mode) > 1)) { goto KEsMZ; } goto v5PBq; hMOA6: foreach ($qrTab as $line) { goto GAaTD; GAaTD: $arrAdd = array(); goto I01mX; ofDE0: r7PtE: goto DlhHf; I01mX: foreach (str_split($line) as $char) { $arrAdd[] = $char == "\x31" ? 1 : 0; fCtii: } goto hazr3; hazr3: TXXgk: goto Wat79; Wat79: $barcode_array["\x62\x63\157\x64\x65"][] = $arrAdd; goto ofDE0; DlhHf: } goto HUlOV; j1U6t: $qrTab = QRcode::text($code, false, $eccLevel); goto uTpEA; RHkCj: } public static function clearCache() { self::$frames = array(); } public static function buildCache() { goto Qk_SZ; P5htz: if (!QR_IMAGE) { goto r09Qx; } goto c2tF5; dxSIg: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto obAvf; e4SaC: if (!($maskNo < 8)) { goto fN7t4; } goto UshIv; QvAMx: $a = 1; goto GEvGA; nfrAn: QRimage::png(self::binarize($frame), $fileName, 1, 0); goto pTj6j; PO3ac: Fz_nr: goto Y_8kr; ei1vI: goto c9Ysw; goto GguqR; bFKDD: $width = count($frame); goto dxSIg; Q7oj3: JfJP0: goto vhsQm; R1ULH: $frame = QRspec::newFrame($a); goto P5htz; GEvGA: FfVkP: goto MxDJu; AkXBG: goto FfVkP; goto PO3ac; Jgo3I: $maskNo++; goto ei1vI; UshIv: $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true); goto FXEQT; pTj6j: r09Qx: goto bFKDD; MxDJu: if (!($a <= QRSPEC_VERSION_MAX)) { goto Fz_nr; } goto R1ULH; Y_8kr: QRtools::markTime("\x61\146\x74\x65\162\137\142\x75\x69\154\144\137\x63\x61\143\150\x65"); goto DobmV; fgOz6: c9Ysw: goto e4SaC; Qk_SZ: QRtools::markTime("\x62\145\x66\157\162\145\x5f\x62\165\x69\154\x64\x5f\x63\141\x63\150\x65"); goto zyrIv; vhsQm: $a++; goto AkXBG; obAvf: $maskNo = 0; goto fgOz6; zyrIv: $mask = new QRmask(); goto QvAMx; c2tF5: $fileName = QR_CACHE_DIR . "\x66\x72\x61\155\x65\137" . $a . "\x2e\x70\156\x67"; goto nfrAn; FXEQT: RTYmO: goto Jgo3I; GguqR: fN7t4: goto Q7oj3; DobmV: } public static function log($outfile, $err) { goto LRwYK; DcX4k: file_put_contents(QR_LOG_DIR . basename($outfile) . "\x2d\145\162\162\157\x72\x73\x2e\x74\170\x74", date("\131\55\x6d\55\144\x20\x48\72\151\72\x73") . "\x3a\x20" . $err, FILE_APPEND); goto QxR9b; nw__z: if ($outfile !== false) { goto OdJjc; } goto FOWYP; jvhfl: OdJjc: goto DcX4k; LRwYK: if (!(QR_LOG_DIR !== false)) { goto updC7; } goto du7oV; FOWYP: file_put_contents(QR_LOG_DIR . "\x65\162\162\157\x72\163\56\164\x78\x74", date("\x59\x2d\x6d\x2d\144\40\x48\72\151\72\163") . "\x3a\40" . $err, FILE_APPEND); goto CjVVw; CjVVw: goto VGajp; goto jvhfl; QxR9b: VGajp: goto BQ4i7; RKgcD: updC7: goto By20z; du7oV: if (!($err != '')) { goto HkaIO; } goto nw__z; BQ4i7: HkaIO: goto RKgcD; By20z: } public static function dumpMask($frame) { goto AIgdG; ZjW0q: if (!($x < $width)) { goto WHsza; } goto E26nA; ot_Vb: uO8uc: goto LAhpL; mdc2W: $x = 0; goto vN9vf; v7d1h: z5vpm: goto HbTPs; IfK72: WHsza: goto HUBzA; WUuvE: $y++; goto szdXH; AIgdG: $width = count($frame); goto JG75C; rFOrb: goto tT0_H; goto IfK72; LAhpL: $x++; goto rFOrb; JG75C: $y = 0; goto v7d1h; W6HYX: ghY47: goto a4mqY; vN9vf: tT0_H: goto ZjW0q; HbTPs: if (!($y < $width)) { goto ghY47; } goto mdc2W; HUBzA: gtprN: goto WUuvE; szdXH: goto z5vpm; goto W6HYX; E26nA: echo ord($frame[$y][$x]) . "\54"; goto ot_Vb; a4mqY: } public static function markTime($markerId) { goto rBqq5; OwT4k: $GLOBALS["\161\x72\x5f\164\x69\155\x65\x5f\142\145\156\x63\150"][$markerId] = $time; goto XzgYG; r145D: $GLOBALS["\161\x72\x5f\x74\151\x6d\145\137\142\x65\x6e\x63\150"] = array(); goto K8_Ju; rBqq5: list($usec, $sec) = explode("\40", microtime()); goto DUHCM; DUHCM: $time = (double) $usec + (double) $sec; goto uTU7j; K8_Ju: vFGp_: goto OwT4k; uTU7j: if (isset($GLOBALS["\161\x72\137\164\x69\x6d\145\137\x62\x65\x6e\x63\150"])) { goto vFGp_; } goto r145D; XzgYG: } public static function timeBenchmark() { goto BAaGw; nOChE: ODcXQ: goto QSk1r; wTUe1: foreach ($GLOBALS["\x71\x72\x5f\x74\151\x6d\145\137\142\145\x6e\x63\150"] as $markerId => $thisTime) { goto yCifH; yJcy8: UM7R5: goto YM31X; yCifH: if ($p > 0) { goto mZhwV; } goto PS7Nc; n8_JK: WVnIY: goto eL9uR; LIoNg: mZhwV: goto PSh7U; PS7Nc: $startTime = $thisTime; goto CrvoR; CrvoR: goto WVnIY; goto LIoNg; eL9uR: $p++; goto XEC2e; PSh7U: echo "\x3c\x74\x72\x3e\74\164\150\40\163\x74\x79\154\145\x3d\42\164\145\x78\x74\55\x61\154\x69\x67\x6e\72\x72\x69\147\150\x74\42\76\164\151\x6c\154\x20" . $markerId . "\x3a\40\74\57\164\150\x3e\x3c\164\144\x3e" . number_format($thisTime - $lastTime, 6) . "\x73\x3c\57\164\144\x3e\x3c\57\x74\x72\76"; goto n8_JK; XEC2e: $lastTime = $thisTime; goto yJcy8; YM31X: } goto nOChE; LJocR: echo "\74\x74\x61\142\154\x65\40\x63\x65\154\154\x70\x61\x64\x64\x69\156\147\75\42\63\42\40\143\x65\x6c\154\x73\x70\x61\x63\151\156\147\75\42\x31\42\x3e\xd\12\40\x20\x20\x20\x20\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\x20\x20\x20\x3c\x74\x68\x65\141\x64\76\x3c\x74\162\x20\163\x74\x79\154\x65\x3d\x22\142\x6f\162\x64\145\x72\55\142\x6f\x74\x74\157\x6d\x3a\61\x70\x78\40\163\157\x6c\x69\x64\x20\x73\151\154\x76\145\162\42\76\74\x74\x64\x20\x63\x6f\x6c\x73\160\141\156\x3d\x22\x32\42\40\x73\164\x79\154\145\75\42\x74\x65\x78\x74\x2d\141\x6c\151\147\156\72\x63\145\x6e\164\145\x72\x22\x3e\x42\105\116\x43\110\115\101\x52\x4b\x3c\57\164\144\x3e\x3c\57\164\x72\76\x3c\57\x74\x68\145\141\144\x3e\15\xa\x20\x20\x20\x20\x20\x20\40\40\40\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\x3c\164\x62\157\144\171\76"; goto wTUe1; vNx6O: $startTime = 0; goto XkPj6; XkPj6: $p = 0; goto LJocR; BAaGw: self::markTime("\146\151\x6e\151\163\x68"); goto C8Ds2; C8Ds2: $lastTime = 0; goto vNx6O; QSk1r: echo "\x3c\57\x74\x62\x6f\x64\171\x3e\74\x74\146\x6f\x6f\164\x3e\xd\xa\40\x20\40\40\40\40\40\40\40\40\x20\x20\x20\x20\40\40\x3c\x74\162\40\163\164\x79\x6c\x65\x3d\x22\x62\x6f\x72\x64\145\x72\55\x74\x6f\x70\x3a\62\x70\x78\40\163\x6f\x6c\151\x64\40\x62\x6c\x61\143\153\x22\76\x3c\x74\x68\40\x73\164\171\x6c\145\x3d\42\x74\145\170\x74\x2d\141\154\x69\147\x6e\x3a\162\x69\x67\150\x74\42\76\124\x4f\124\x41\114\72\40\74\57\x74\x68\76\74\x74\144\76" . number_format($lastTime - $startTime, 6) . "\x73\74\x2f\x74\x64\76\x3c\x2f\x74\x72\76\xd\12\x20\x20\x20\x20\x20\x20\40\40\x20\40\40\x20\74\x2f\164\146\157\157\164\76\15\xa\40\x20\40\40\x20\x20\40\x20\x20\40\x20\40\74\57\164\141\142\154\145\x3e"; goto vo13I; vo13I: } } goto HrCE7; CG9qc: class QRrsItem { public $mm; public $nn; public $alpha_to = array(); public $index_of = array(); public $genpoly = array(); public $nroots; public $fcr; public $prim; public $iprim; public $pad; public $gfpoly; public function modnn($x) { goto zc1AP; cmxRO: if (!($x >= $this->nn)) { goto WHQsI; } goto uHqOn; HQFV1: goto ZRIS6; goto ZYQu_; Dv0L2: $x = ($x >> $this->mm) + ($x & $this->nn); goto HQFV1; SSAyX: return $x; goto GGH9H; zc1AP: ZRIS6: goto cmxRO; uHqOn: $x -= $this->nn; goto Dv0L2; ZYQu_: WHQsI: goto SSAyX; GGH9H: } public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto Gm0A2; kFCya: if (!($symsize < 0 || $symsize > 8)) { goto dM3O6; } goto zpK0F; BS86E: return $rs; goto YZKhL; i7N8_: m0fp8: goto iMlRQ; jjPy_: BQ6Ng: goto D2k2h; e3X2P: NXSdm: goto ZZjrO; RXaq8: if ($rs->genpoly[$j] != 0) { goto I8nZD; } goto atFw1; zkJfQ: ZLpVp: goto vM8EN; t2gNP: return $rs; goto i7N8_; A64Fd: $sr = 1; goto IWl6e; yBK49: $rs->genpoly = array_fill(0, $nroots + 1, 0); goto I3lFU; kJkUb: $i++; goto X14RG; uWWQs: if (!($nroots < 0 || $nroots >= 1 << $symsize)) { goto gqmfF; } goto KZSf0; atFw1: $rs->genpoly[$j] = $rs->genpoly[$j - 1]; goto cje0H; F1jhv: $rs->gfpoly = $gfpoly; goto tk81W; ikfHf: goto Tag5_; goto x7p6G; NYJ77: $sr ^= $gfpoly; goto P2gmE; eLmwp: if (!($i < $rs->nn)) { goto tmxuK; } goto LGnLd; WNYGv: bvWsl: goto qQqMU; c2LT0: dM3O6: goto RVOnd; JdTha: Tag5_: goto t2hyA; cxNDZ: $rs->nn = (1 << $symsize) - 1; goto AeVw4; I1gOi: if (!($sr != 1)) { goto W9MMt; } goto w_ovf; w_ovf: $rs = NULL; goto BS86E; JWT7n: uD76I: goto uWWQs; Qoihq: if (!($i <= $nroots)) { goto BQ6Ng; } goto xwjv9; Gm0A2: $rs = null; goto kFCya; LGnLd: $rs->index_of[$sr] = $i; goto b2d0f; IWl6e: $i = 0; goto sBu0A; Jif2i: nDK4Z: goto unE6t; H4tkV: $rs->genpoly[$i + 1] = 1; goto yG3Re; zBu8q: $rs->index_of = array_fill(0, $rs->nn + 1, 0); goto EzgD1; r0Sz9: $rs->alpha_to[$A0] = 0; goto A64Fd; szUIF: DMGt3: goto mfKyV; tk81W: $iprim = 1; goto JdTha; vxMsQ: $j--; goto HHKTB; YZKhL: W9MMt: goto yBK49; ydbVN: $rs->genpoly[0] = 1; goto MFNCc; CDdo4: gqmfF: goto b6JfL; myVKO: t0AxC: goto uq0_n; zWC4K: $rs->nroots = $nroots; goto F1jhv; qQqMU: $i++; goto c05zX; KwDTv: VMVQR: goto I11Fn; zpK0F: return $rs; goto c2LT0; qbi7z: goto NXSdm; goto Mk8ra; pO2qM: $root = $fcr * $prim; goto e3X2P; oqWzl: $rs->mm = $symsize; goto cxNDZ; c05zX: goto qKRpg; goto jjPy_; X14RG: $root += $prim; goto qbi7z; x7p6G: ehlw8: goto XSf91; KEhDu: tmxuK: goto I1gOi; xwjv9: $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]]; goto WNYGv; daYGv: wxmiU: goto kJkUb; unE6t: if (!($j > 0)) { goto t0AxC; } goto RXaq8; NJFGa: return $rs; goto szUIF; iMlRQ: $rs = new QRrsItem(); goto oqWzl; ZZjrO: if (!($i < $nroots)) { goto lynDc; } goto H4tkV; vM8EN: $i++; goto pS2AR; dvwXV: bnVIP: goto vxMsQ; e5rIA: $sr &= $rs->nn; goto zkJfQ; AeVw4: $rs->pad = $pad; goto UEHfj; Mk8ra: lynDc: goto AOgMz; sBu0A: GibsK: goto eLmwp; UEHfj: $rs->alpha_to = array_fill(0, $rs->nn + 1, 0); goto zBu8q; LNN53: qKRpg: goto Qoihq; pS2AR: goto GibsK; goto KEhDu; xWA1i: I8nZD: goto LNFee; I3lFU: $rs->fcr = $fcr; goto ccGCf; P2gmE: f77aE: goto e5rIA; D2k2h: return $rs; goto XEew6; ccGCf: $rs->prim = $prim; goto zWC4K; bK10K: if (!($sr & 1 << $symsize)) { goto f77aE; } goto NYJ77; I11Fn: $iprim += $rs->nn; goto ikfHf; AOgMz: $i = 0; goto LNN53; yz37c: $rs->index_of[0] = $A0; goto r0Sz9; yG3Re: $j = $i; goto Jif2i; b6JfL: if (!($pad < 0 || $pad >= (1 << $symsize) - 1 - $nroots)) { goto m0fp8; } goto t2gNP; H12ug: return $rs; goto JWT7n; mfKyV: if (!($prim <= 0 || $prim >= 1 << $symsize)) { goto uD76I; } goto H12ug; EzgD1: $NN =& $rs->nn; goto UdqNa; cje0H: goto a6kAp; goto xWA1i; UdqNa: $A0 =& $NN; goto yz37c; L2c5G: a6kAp: goto dvwXV; RVOnd: if (!($fcr < 0 || $fcr >= 1 << $symsize)) { goto DMGt3; } goto NJFGa; t2hyA: if (!($iprim % $prim != 0)) { goto ehlw8; } goto KwDTv; b2d0f: $rs->alpha_to[$i] = $sr; goto gVfaD; uq0_n: $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)]; goto daYGv; HHKTB: goto nDK4Z; goto myVKO; XSf91: $rs->iprim = (int) ($iprim / $prim); goto ydbVN; LNFee: $rs->genpoly[$j] = $rs->genpoly[$j - 1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)]; goto L2c5G; KZSf0: return $rs; goto CDdo4; gVfaD: $sr <<= 1; goto bK10K; MFNCc: $i = 0; goto pO2qM; XEew6: } public function encode_rs_char($data, &$parity) { goto TyXew; Z9q6V: plw60: goto Xsvwu; Xsvwu: AgXJi: goto egrUS; qf_5V: ksCop: goto pFEnQ; iGmzj: $IPRIM =& $this->iprim; goto BLa3S; q7msd: $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS - $j])]; goto bGTOF; wrrKr: $parity = array_fill(0, $NROOTS, 0); goto Wz6su; a8xpx: $FCR =& $this->fcr; goto PHWcw; VSFlz: if (!($j < $NROOTS)) { goto plw60; } goto q7msd; HZSHt: OD2JL: goto vbxo7; pFEnQ: ECNeB: goto AUydA; bGTOF: dvZNl: goto kLreW; HZxKc: if ($feedback != $A0) { goto jOGco; } goto N2S1D; owyx_: $feedback = $INDEX_OF[$data[$i] ^ $parity[0]]; goto zficK; OVssj: $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback); goto LJHHC; PHWcw: $PRIM =& $this->prim; goto iGmzj; N2S1D: array_push($parity, 0); goto jqkP8; Wz6su: $i = 0; goto HZSHt; jqkP8: goto ksCop; goto vwrWy; fk9uM: $GENPOLY =& $this->genpoly; goto gf7Cu; TyXew: $MM =& $this->mm; goto FaE0R; FDxjY: $ALPHA_TO =& $this->alpha_to; goto L0GWX; zficK: if (!($feedback != $A0)) { goto AgXJi; } goto OVssj; kLreW: $j++; goto wkdya; LJHHC: $j = 1; goto bcB0O; bcB0O: RFP0_: goto VSFlz; lBqwi: array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]); goto qf_5V; vbxo7: if (!($i < $NN - $NROOTS - $PAD)) { goto f0Laf; } goto owyx_; BLa3S: $PAD =& $this->pad; goto zz7eG; jgcpE: f0Laf: goto CePLy; egrUS: array_shift($parity); goto HZxKc; wkdya: goto RFP0_; goto Z9q6V; zz7eG: $A0 =& $NN; goto wrrKr; vwrWy: jOGco: goto lBqwi; dwReH: goto OD2JL; goto jgcpE; FaE0R: $NN =& $this->nn; goto FDxjY; AUydA: $i++; goto dwReH; gf7Cu: $NROOTS =& $this->nroots; goto a8xpx; L0GWX: $INDEX_OF =& $this->index_of; goto fk9uM; CePLy: } } goto zKDRA; N2LXU: class QRspec { public static $capacity = array(array(0, 0, 0, array(0, 0, 0, 0)), array(21, 26, 0, array(7, 10, 13, 17)), array(25, 44, 7, array(10, 16, 22, 28)), array(29, 70, 7, array(15, 26, 36, 44)), array(33, 100, 7, array(20, 36, 52, 64)), array(37, 134, 7, array(26, 48, 72, 88)), array(41, 172, 7, array(36, 64, 96, 112)), array(45, 196, 0, array(40, 72, 108, 130)), array(49, 242, 0, array(48, 88, 132, 156)), array(53, 292, 0, array(60, 110, 160, 192)), array(57, 346, 0, array(72, 130, 192, 224)), array(61, 404, 0, array(80, 150, 224, 264)), array(65, 466, 0, array(96, 176, 260, 308)), array(69, 532, 0, array(104, 198, 288, 352)), array(73, 581, 3, array(120, 216, 320, 384)), array(77, 655, 3, array(132, 240, 360, 432)), array(81, 733, 3, array(144, 280, 408, 480)), array(85, 815, 3, array(168, 308, 448, 532)), array(89, 901, 3, array(180, 338, 504, 588)), array(93, 991, 3, array(196, 364, 546, 650)), array(97, 1085, 3, array(224, 416, 600, 700)), array(101, 1156, 4, array(224, 442, 644, 750)), array(105, 1258, 4, array(252, 476, 690, 816)), array(109, 1364, 4, array(270, 504, 750, 900)), array(113, 1474, 4, array(300, 560, 810, 960)), array(117, 1588, 4, array(312, 588, 870, 1050)), array(121, 1706, 4, array(336, 644, 952, 1110)), array(125, 1828, 4, array(360, 700, 1020, 1200)), array(129, 1921, 3, array(390, 728, 1050, 1260)), array(133, 2051, 3, array(420, 784, 1140, 1350)), array(137, 2185, 3, array(450, 812, 1200, 1440)), array(141, 2323, 3, array(480, 868, 1290, 1530)), array(145, 2465, 3, array(510, 924, 1350, 1620)), array(149, 2611, 3, array(540, 980, 1440, 1710)), array(153, 2761, 3, array(570, 1036, 1530, 1800)), array(157, 2876, 0, array(570, 1064, 1590, 1890)), array(161, 3034, 0, array(600, 1120, 1680, 1980)), array(165, 3196, 0, array(630, 1204, 1770, 2100)), array(169, 3362, 0, array(660, 1260, 1860, 2220)), array(173, 3532, 0, array(720, 1316, 1950, 2310)), array(177, 3706, 0, array(750, 1372, 2040, 2430))); public static function getDataLength($version, $level) { return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level]; } public static function getECCLength($version, $level) { return self::$capacity[$version][QRCAP_EC][$level]; } public static function getWidth($version) { return self::$capacity[$version][QRCAP_WIDTH]; } public static function getRemainder($version) { return self::$capacity[$version][QRCAP_REMINDER]; } public static function getMinimumVersion($size, $level) { goto u_Dvf; EnGYD: g5HQ5: goto pIcbD; mzBA8: if (!($words >= $size)) { goto VcAZi; } goto ksBS5; zZf_s: $words = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level]; goto mzBA8; LkS0W: return -1; goto bTld1; MTiKQ: $i++; goto OjXdC; foEsB: MkUzA: goto LkS0W; OjXdC: goto g5HQ5; goto foEsB; ZdJ7x: rYV5s: goto MTiKQ; h8WU8: VcAZi: goto ZdJ7x; u_Dvf: $i = 1; goto EnGYD; pIcbD: if (!($i <= QRSPEC_VERSION_MAX)) { goto MkUzA; } goto zZf_s; ksBS5: return $i; goto h8WU8; bTld1: } public static $lengthTableBits = array(array(10, 12, 14), array(9, 11, 13), array(8, 16, 16), array(8, 10, 12)); public static function lengthIndicator($mode, $version) { goto UA0la; knZJa: $l = 0; goto poYNw; yddT5: if ($version <= 26) { goto CU9y6; } goto Y35hx; OZpGq: CU9y6: goto nXZu0; WlxAa: return self::$lengthTableBits[$mode][$l]; goto VuJuT; FhNJk: goto Y5Nsl; goto OZpGq; phhGQ: RNx2D: goto knZJa; c7btV: return 0; goto kFT6f; kFT6f: kSeCY: goto lmnOY; nXZu0: $l = 1; goto arfz4; lmnOY: if ($version <= 9) { goto RNx2D; } goto yddT5; arfz4: Y5Nsl: goto dPk1N; poYNw: HQvuP: goto WlxAa; dPk1N: goto HQvuP; goto phhGQ; UA0la: if (!($mode == QR_MODE_STRUCTURE)) { goto kSeCY; } goto c7btV; Y35hx: $l = 2; goto FhNJk; VuJuT: } public static function maximumWords($mode, $version) { goto QCNYq; zi8Kp: cfE4A: goto zYdIg; QP5u4: if ($version <= 26) { goto ZKsx3; } goto AGKX2; AGKX2: $l = 2; goto v9t9h; ri7H8: ZKsx3: goto WEPOw; djN4N: return $words; goto lVLzf; v9t9h: goto EmPwK; goto ri7H8; QCNYq: if (!($mode == QR_MODE_STRUCTURE)) { goto yTIrO; } goto wpWFu; pd6A2: vYSSu: goto djN4N; GWyiV: yTIrO: goto AYGol; WEPOw: $l = 1; goto YTAX2; YTAX2: EmPwK: goto cZHAp; dBy2U: $l = 0; goto zi8Kp; VO1s9: if (!($mode == QR_MODE_KANJI)) { goto vYSSu; } goto H7nhG; Uha6D: gx9Xa: goto dBy2U; wpWFu: return 3; goto GWyiV; zYdIg: $bits = self::$lengthTableBits[$mode][$l]; goto mqMcE; cZHAp: goto cfE4A; goto Uha6D; AYGol: if ($version <= 9) { goto gx9Xa; } goto QP5u4; H7nhG: $words *= 2; goto pd6A2; mqMcE: $words = (1 << $bits) - 1; goto VO1s9; lVLzf: } public static $eccTable = array(array(array(0, 0), array(0, 0), array(0, 0), array(0, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(2, 0), array(2, 0)), array(array(1, 0), array(2, 0), array(2, 0), array(4, 0)), array(array(1, 0), array(2, 0), array(2, 2), array(2, 2)), array(array(2, 0), array(4, 0), array(4, 0), array(4, 0)), array(array(2, 0), array(4, 0), array(2, 4), array(4, 1)), array(array(2, 0), array(2, 2), array(4, 2), array(4, 2)), array(array(2, 0), array(3, 2), array(4, 4), array(4, 4)), array(array(2, 2), array(4, 1), array(6, 2), array(6, 2)), array(array(4, 0), array(1, 4), array(4, 4), array(3, 8)), array(array(2, 2), array(6, 2), array(4, 6), array(7, 4)), array(array(4, 0), array(8, 1), array(8, 4), array(12, 4)), array(array(3, 1), array(4, 5), array(11, 5), array(11, 5)), array(array(5, 1), array(5, 5), array(5, 7), array(11, 7)), array(array(5, 1), array(7, 3), array(15, 2), array(3, 13)), array(array(1, 5), array(10, 1), array(1, 15), array(2, 17)), array(array(5, 1), array(9, 4), array(17, 1), array(2, 19)), array(array(3, 4), array(3, 11), array(17, 4), array(9, 16)), array(array(3, 5), array(3, 13), array(15, 5), array(15, 10)), array(array(4, 4), array(17, 0), array(17, 6), array(19, 6)), array(array(2, 7), array(17, 0), array(7, 16), array(34, 0)), array(array(4, 5), array(4, 14), array(11, 14), array(16, 14)), array(array(6, 4), array(6, 14), array(11, 16), array(30, 2)), array(array(8, 4), array(8, 13), array(7, 22), array(22, 13)), array(array(10, 2), array(19, 4), array(28, 6), array(33, 4)), array(array(8, 4), array(22, 3), array(8, 26), array(12, 28)), array(array(3, 10), array(3, 23), array(4, 31), array(11, 31)), array(array(7, 7), array(21, 7), array(1, 37), array(19, 26)), array(array(5, 10), array(19, 10), array(15, 25), array(23, 25)), array(array(13, 3), array(2, 29), array(42, 1), array(23, 28)), array(array(17, 0), array(10, 23), array(10, 35), array(19, 35)), array(array(17, 1), array(14, 21), array(29, 19), array(11, 46)), array(array(13, 6), array(14, 23), array(44, 7), array(59, 1)), array(array(12, 7), array(12, 26), array(39, 14), array(22, 41)), array(array(6, 14), array(6, 34), array(46, 10), array(2, 64)), array(array(17, 4), array(29, 14), array(49, 10), array(24, 46)), array(array(4, 18), array(13, 32), array(48, 14), array(42, 32)), array(array(20, 4), array(40, 7), array(43, 22), array(10, 67)), array(array(19, 6), array(18, 31), array(34, 34), array(20, 61))); public static function getEccSpec($version, $level, array &$spec) { goto Ue1Fj; W1sDT: $spec[0] = $b1; goto uwGZ_; ZhHl7: $spec[2] = (int) ($ecc / $b1); goto lqjjy; AdUQv: $spec[1] = (int) ($data / $b1); goto ZhHl7; B_sOW: $spec[4] = 0; goto cWBL6; lM5qO: rqGDY: goto DCntk; YKeTu: $ecc = self::getECCLength($version, $level); goto fHwUc; gZDYt: $spec[4] = $spec[1] + 1; goto x7qRj; uwGZ_: $spec[1] = (int) ($data / ($b1 + $b2)); goto zy9pW; x7qRj: goto vgguq; goto y7u9l; zy9pW: $spec[2] = (int) ($ecc / ($b1 + $b2)); goto eITbl; fHwUc: if ($b2 == 0) { goto fWbYh; } goto W1sDT; DCntk: $b1 = self::$eccTable[$version][$level][0]; goto Dy8p7; lqjjy: $spec[3] = 0; goto B_sOW; cXyV5: $spec = array(0, 0, 0, 0, 0); goto lM5qO; Ue1Fj: if (!(count($spec) < 5)) { goto rqGDY; } goto cXyV5; TqHDA: $data = self::getDataLength($version, $level); goto YKeTu; eITbl: $spec[3] = $b2; goto gZDYt; Dy8p7: $b2 = self::$eccTable[$version][$level][1]; goto TqHDA; O9rwC: $spec[0] = $b1; goto AdUQv; cWBL6: vgguq: goto Byjua; y7u9l: fWbYh: goto O9rwC; Byjua: } public static $alignmentPattern = array(array(0, 0), array(0, 0), array(18, 0), array(22, 0), array(26, 0), array(30, 0), array(34, 0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58)); public static function putAlignmentMarker(array &$frame, $ox, $oy) { goto ZNKDJ; M8MhN: QRstr::set($frame, $xStart, $yStart + $y, $finder[$y]); goto dlfJU; caTZR: if (!($y < 5)) { goto RMei3; } goto M8MhN; jj_hg: $y++; goto S1H1z; S1H1z: goto pH3TX; goto EmTFb; dlfJU: hV3Zq: goto jj_hg; Gvet3: $yStart = $oy - 2; goto AXL15; dhZyz: pH3TX: goto caTZR; AfewX: $y = 0; goto dhZyz; ZNKDJ: $finder = array("\241\xa1\241\xa1\xa1", "\241\xa0\240\xa0\241", "\241\xa0\xa1\240\xa1", "\241\xa0\240\240\241", "\xa1\xa1\xa1\241\241"); goto Gvet3; EmTFb: RMei3: goto GDtl4; AXL15: $xStart = $ox - 2; goto AfewX; GDtl4: } public static function putAlignmentPattern($version, &$frame, $width) { goto O46tp; Nukh1: Ul6wv: goto Oi9mr; DbCKr: $cx += $d; goto OW0dv; XdM40: rubBA: goto WS6Oz; RSDjU: $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0]; goto xd8aM; nsYLa: A_rIe: goto qeLqg; BiM3n: pN8lB: goto RgNUW; STogq: HsB0l: goto jJmAX; W5356: ZmZ1_: goto TrPvH; J_WPK: goto ON_nh; goto EHIkj; vdBMG: $x++; goto kpp8S; aPR3O: if (!($x < $w - 1)) { goto ZmZ1_; } goto izFEx; jJmAX: if (!($x < $w - 1)) { goto jt_a9; } goto XScgy; xeLAx: jt_a9: goto zTR6R; RgNUW: if (!($y < $w - 1)) { goto A_rIe; } goto b8g_Y; XScgy: self::putAlignmentMarker($frame, $cx, $cy); goto pLfHQ; OW0dv: LcwIi: goto vdBMG; izFEx: self::putAlignmentMarker($frame, 6, $cx); goto a71Md; VrzIS: Z6NvF: goto gCbb3; C58L9: goto pN8lB; goto nsYLa; C7V1B: self::putAlignmentMarker($frame, $x, $y); goto dBMwu; HRLxt: wiw3l: goto RSDjU; xd8aM: if ($d < 0) { goto CnXcH; } goto jEKSj; b8g_Y: $cx = self::$alignmentPattern[$version][0]; goto fjK0g; g5xfS: ON_nh: goto i2Brv; Oi9mr: $y++; goto C58L9; zTR6R: $cy += $d; goto Nukh1; a71Md: self::putAlignmentMarker($frame, $cx, 6); goto DbCKr; cECgF: $y = 0; goto BiM3n; jh6N2: $x = self::$alignmentPattern[$version][0]; goto Sklp3; jEKSj: $w = (int) (($width - self::$alignmentPattern[$version][0]) / $d + 2); goto J_WPK; hLKgG: $w = 2; goto g5xfS; gCbb3: $cx = self::$alignmentPattern[$version][0]; goto PNZ8Y; urcAU: mYJYO: goto aPR3O; dBMwu: return; goto VrzIS; WS6Oz: $x++; goto zVR7T; PNZ8Y: $x = 1; goto urcAU; zVR7T: goto HsB0l; goto xeLAx; pLfHQ: $cx += $d; goto XdM40; fjK0g: $x = 0; goto STogq; Sklp3: $y = self::$alignmentPattern[$version][0]; goto C7V1B; kpp8S: goto mYJYO; goto W5356; TrPvH: $cy = self::$alignmentPattern[$version][0]; goto cECgF; EHIkj: CnXcH: goto hLKgG; xak3d: return; goto HRLxt; i2Brv: if (!($w * $w - 3 == 1)) { goto Z6NvF; } goto jh6N2; O46tp: if (!($version < 2)) { goto wiw3l; } goto xak3d; qeLqg: } public static $versionPattern = array(0x7c94, 0x85bc, 0x9a99, 0xa4d3, 0xbbf6, 0xc762, 0xd847, 0xe60d, 0xf928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9, 0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75, 0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64, 0x27541, 0x28c69); public static function getVersionPattern($version) { goto VjJHs; If4Fu: MK7s4: goto dRF1t; VjJHs: if (!($version < 7 || $version > QRSPEC_VERSION_MAX)) { goto MK7s4; } goto f6rLf; dRF1t: return self::$versionPattern[$version - 7]; goto nIvwh; f6rLf: return 0; goto If4Fu; nIvwh: } public static $formatInfo = array(array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976), array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0), array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed), array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x762, 0x255, 0xd0c, 0x83b)); public static function getFormatInfo($mask, $level) { goto eXUlo; Tejva: if (!($level < 0 || $level > 3)) { goto JVl1O; } goto s24dO; s24dO: return 0; goto C4Ylm; C4Ylm: JVl1O: goto MPHaX; eXUlo: if (!($mask < 0 || $mask > 7)) { goto rHY8O; } goto iWCsz; VzEkB: rHY8O: goto Tejva; MPHaX: return self::$formatInfo[$level][$mask]; goto JSutW; iWCsz: return 0; goto VzEkB; JSutW: } public static $frames = array(); public static function putFinderPattern(&$frame, $ox, $oy) { goto XwZM5; n4_tL: asIwY: goto ohxif; spKiG: goto KEOp6; goto sHU59; ohxif: $y++; goto spKiG; L9K5u: QRstr::set($frame, $ox, $oy + $y, $finder[$y]); goto n4_tL; ZwYUE: KEOp6: goto cQYve; GdAnJ: $y = 0; goto ZwYUE; sHU59: nTMv0: goto W8MqQ; XwZM5: $finder = array("\xc1\xc1\301\301\xc1\xc1\301", "\301\xc0\300\300\xc0\xc0\301", "\301\xc0\xc1\301\301\xc0\301", "\xc1\xc0\xc1\301\301\300\301", "\301\xc0\xc1\xc1\xc1\300\301", "\301\300\300\300\xc0\xc0\301", "\xc1\301\301\xc1\301\xc1\xc1"); goto GdAnJ; cQYve: if (!($y < 7)) { goto nTMv0; } goto L9K5u; W8MqQ: } public static function createFrame($version) { goto CkYgp; HiR2u: wPq6y: goto hBpGg; ClmqE: $v = $v >> 1; goto Ni90T; MCY8E: hFe_h: goto hs2v_; yu3ef: $x++; goto IkxXL; IxBFe: TPN0a: goto zzBEi; Onj4H: $yOffset++; goto IxBFe; FvMFq: $frame[$y][8] = "\x84"; goto BwPQc; rZpvb: $x = 0; goto Sv8wU; CkYgp: $width = self::$capacity[$version][QRCAP_WIDTH]; goto vFMWS; BwPQc: $frame[$yOffset][8] = "\x84"; goto gmc2e; R00zU: $yOffset = $width - 8; goto O1dB2; Bt5hp: $x++; goto jKPS7; k5GLm: $v = $v >> 1; goto MtBAF; AC9eU: aYWu8: goto XR1mQ; CIdd1: DqFDX: goto yu3ef; X7DFV: self::putFinderPattern($frame, 0, 0); goto fd3Wf; bMqwt: g0J_U: goto TlILv; b7BRP: $i = 1; goto YlvKF; tsVct: $v = $vinf; goto rZpvb; jKPS7: goto Zzwe1; goto AC9eU; YfvuW: QRstr::set($frame, 0, 8, $setPattern); goto UbrrX; dxRTV: goto hu4Cw; goto MQNlI; LSbOh: y3xq1: goto WUt1g; AKF0S: return $frame; goto vqjmv; oPfrg: QRstr::set($frame, $width - 8, 7, $setPattern); goto ADnXA; Ni90T: s6RzJ: goto EGELx; XR1mQ: w4coE: goto A8XaY; hBpGg: if (!($y < 3)) { goto yEi0p; } goto SWg6L; EfhfN: $frame[$y][$width - 8] = "\300"; goto BIPJr; UbrrX: QRstr::set($frame, $width - 8, 8, $setPattern, 8); goto R00zU; NOZb1: $setPattern = str_repeat("\xc0", 8); goto mpJ7E; MtBAF: FVnLg: goto Bt5hp; FlfYF: h8B4Z: goto b7BRP; VYWuh: Zzwe1: goto KSrK7; KSrK7: if (!($x < 3)) { goto aYWu8; } goto PDIi7; wAIlj: $setPattern = str_repeat("\x84", 9); goto YfvuW; LS9aF: $y = 0; goto HiR2u; SWg6L: $frame[$width - 11 + $y][$x] = chr(0x88 | $v & 1); goto ClmqE; zYwpm: v6PWD: goto chv4P; Iefy_: $vinf = self::getVersionPattern($version); goto tsVct; WUt1g: self::putAlignmentPattern($version, $frame, $width); goto LKvK5; BIPJr: $frame[$yOffset][7] = "\300"; goto Onj4H; iNfM8: yEi0p: goto CIdd1; YdzRG: if (!($i < $width - 15)) { goto y3xq1; } goto IId8D; cV1np: $frame = array_fill(0, $width, $frameLine); goto X7DFV; chv4P: $i++; goto HwqCY; BsVmF: self::putFinderPattern($frame, 0, $width - 7); goto G1MkY; qfSfO: $x = 0; goto VYWuh; Gxb7e: $v = $vinf; goto PXkos; PDIi7: $frame[$y][$x + ($width - 11)] = chr(0x88 | $v & 1); goto k5GLm; mhhy2: $frame[7 + $i][6] = chr(0x90 | $i & 1); goto zYwpm; YlvKF: I8y_y: goto YdzRG; JU5_X: goto XMh6z; goto FlfYF; FTxqK: $frame[$y][7] = "\300"; goto EfhfN; LKvK5: if (!($version >= 7)) { goto hFe_h; } goto Iefy_; fd3Wf: self::putFinderPattern($frame, $width - 7, 0); goto BsVmF; TlILv: if (!($y < 6)) { goto SIl6d; } goto qfSfO; UOD8V: hu4Cw: goto hSava; ADnXA: QRstr::set($frame, 0, $width - 8, $setPattern); goto wAIlj; vFMWS: $frameLine = str_repeat("\x0", $width); goto cV1np; mpJ7E: QRstr::set($frame, 0, 7, $setPattern); goto oPfrg; OJxpN: $y = 0; goto UOD8V; zzBEi: $y++; goto dxRTV; fn5Kn: SIl6d: goto MCY8E; PXkos: $y = 0; goto bMqwt; rQKBx: if (!($x < 6)) { goto mK1Cf; } goto LS9aF; G1MkY: $yOffset = $width - 7; goto OJxpN; ll0Sm: $y++; goto YCMyv; hSava: if (!($y < 7)) { goto D0aX4; } goto FTxqK; IId8D: $frame[6][7 + $i] = chr(0x90 | $i & 1); goto mhhy2; WeRH5: if (!($y < 8)) { goto h8B4Z; } goto FvMFq; hs2v_: $frame[$width - 8][8] = "\201"; goto AKF0S; gmc2e: k396w: goto ll0Sm; YCMyv: $yOffset++; goto JU5_X; mu0Eu: mK1Cf: goto Gxb7e; LBVML: goto wPq6y; goto iNfM8; LcBHt: XMh6z: goto WeRH5; EGELx: $y++; goto LBVML; A8XaY: $y++; goto jqFgW; O1dB2: $y = 0; goto LcBHt; IkxXL: goto QGmia; goto mu0Eu; MQNlI: D0aX4: goto NOZb1; jqFgW: goto g0J_U; goto fn5Kn; HwqCY: goto I8y_y; goto LSbOh; Sv8wU: QGmia: goto rQKBx; vqjmv: } public static function debug($frame, $binary_mode = false) { goto hXczs; hXczs: if ($binary_mode) { goto oHwMa; } goto zE6U0; q5FFH: MhbiD: goto Sg7q9; hx_H1: dIcn9: goto Y7krm; Sg7q9: ?>
                <style>
                    .p { background-color: yellow; }
                    .m { background-color: #00FF00; }
                    .s { background-color: #FF0000; }
                    .c { background-color: aqua; }
                    .x { background-color: pink; }
                    .f { background-color: gold; }
                </style>
                <?php  goto h2lLz; C6S4w: echo "\74\x2f\164\164\x3e\74\57\x70\x72\x65\76\x3c\142\162\57\40\x3e\74\x62\162\57\x20\76\74\x62\162\57\x20\76\74\142\162\57\40\76\x3c\x62\x72\x2f\x20\x3e\74\x62\162\57\x20\x3e"; goto ukoFI; fI3qF: echo "\x3c\57\x74\164\x3e\74\57\160\162\x65\x3e"; goto Omk80; Y7krm: ?>
                <style>
                    .m { background-color: white; }
                </style>
                <?php  goto uC9u4; Omk80: goto CvcEl; goto W_QOq; ukoFI: CvcEl: goto dAGRZ; tb7Ar: echo join("\x3c\142\162\57\x20\x3e\46\156\142\163\160\x3b\x26\156\142\x73\160\73\46\156\x62\x73\x70\73\46\x6e\x62\163\160\x3b\x26\156\142\163\x70\73\x26\156\142\x73\x70\73\46\x6e\x62\163\160\73\x26\156\x62\x73\x70\73", $frame); goto C6S4w; uC9u4: echo "\74\x70\162\x65\x3e\74\x74\x74\76\74\x62\162\x2f\x20\76\74\142\162\57\x20\x3e\74\x62\x72\57\40\76\x26\156\142\x73\160\x3b\x26\156\142\x73\x70\x3b\x26\x6e\142\x73\160\73\46\156\x62\163\x70\x3b\x26\156\x62\x73\x70\73\46\x6e\x62\x73\x70\73\x26\156\x62\163\160\x3b\x26\156\142\163\160\x3b"; goto tb7Ar; h2lLz: echo "\x3c\160\162\145\x3e\74\x74\164\76"; goto nFF4R; nFF4R: echo join("\74\x62\x72\57\x20\76", $frame); goto fI3qF; W_QOq: oHwMa: goto Pq7Bm; zE6U0: foreach ($frame as &$frameLine) { goto vLfeK; fFTIF: $frameLine = join("\x26\x23\x38\71\x30\x31\73", explode("\x0", $frameLine)); goto k5FsJ; GiL0K: $frameLine = join("\74\x73\160\141\x6e\40\143\x6c\141\163\x73\x3d\42\x70\42\x3e\x26\43\71\66\x31\70\73\74\x2f\163\x70\x61\x6e\x3e", explode("\241", $frameLine)); goto BqhDr; lMucb: $frameLine = join("\74\x73\x70\141\x6e\40\143\154\141\163\x73\x3d\42\x78\42\76\46\43\x39\67\x36\62\x3b\x3c\x2f\163\160\141\156\x3e", explode("\201", $frameLine)); goto zrgIm; vtJnd: $frameLine = join("\x3c\x73\x70\141\156\40\143\154\x61\163\163\75\x22\146\42\76\x26\x6e\x62\x73\x70\x3b\x3c\57\163\160\141\156\x3e", explode("\x88", $frameLine)); goto XCCP5; k5FsJ: BP_cp: goto Rk5OP; P4COn: $frameLine = join("\x3c\163\160\141\x6e\40\143\x6c\x61\x73\163\x3d\42\160\x22\76\46\x6e\x62\x73\x70\73\x3c\x2f\163\x70\141\x6e\76", explode("\xa0", $frameLine)); goto GiL0K; OYAlS: $frameLine = join("\x3c\163\160\141\x6e\40\143\154\141\163\x73\x3d\x22\x6d\x22\x3e\46\43\71\x36\61\70\x3b\74\57\x73\x70\141\156\x3e", explode("\301", $frameLine)); goto P4COn; zrgIm: $frameLine = join("\74\x73\160\141\156\x20\143\x6c\x61\x73\x73\75\42\x63\42\x3e\x26\156\x62\163\160\73\x3c\x2f\163\x70\x61\156\x3e", explode("\220", $frameLine)); goto PnnbJ; XCCP5: $frameLine = join("\74\x73\x70\x61\156\x20\143\154\x61\163\x73\75\42\x66\x22\76\x26\43\x39\x36\61\x38\x3b\x3c\x2f\163\x70\141\156\x3e", explode("\211", $frameLine)); goto rVl4C; BqhDr: $frameLine = join("\74\x73\160\141\156\x20\143\154\141\163\163\75\42\163\42\76\46\43\x39\66\67\61\x3b\x3c\x2f\x73\160\x61\x6e\x3e", explode("\x84", $frameLine)); goto W3Dwh; vLfeK: $frameLine = join("\74\163\x70\141\x6e\x20\x63\154\141\163\x73\75\x22\x6d\42\x3e\46\156\142\163\x70\73\x3c\x2f\163\x70\141\156\76", explode("\xc0", $frameLine)); goto OYAlS; W3Dwh: $frameLine = join("\x3c\x73\x70\x61\x6e\x20\x63\154\x61\x73\x73\x3d\42\x73\42\76\x26\x23\71\66\67\60\73\x3c\57\163\160\x61\156\76", explode("\205", $frameLine)); goto lMucb; PnnbJ: $frameLine = join("\x3c\x73\x70\x61\x6e\40\143\x6c\x61\163\163\75\42\143\42\x3e\46\43\x39\67\61\71\x3b\x3c\x2f\163\x70\141\x6e\76", explode("\221", $frameLine)); goto vtJnd; rVl4C: $frameLine = join("\x26\x23\x39\x38\63\x30\73", explode("\x1", $frameLine)); goto fFTIF; Rk5OP: } goto q5FFH; Pq7Bm: foreach ($frame as &$frameLine) { goto UE_vT; e2t6w: $frameLine = join("\x26\43\71\x36\x30\x38\x3b\x26\x23\71\66\60\70\x3b", explode("\x31", $frameLine)); goto sDn2x; sDn2x: k3i7L: goto HHFN6; UE_vT: $frameLine = join("\x3c\163\160\141\156\x20\x63\154\141\x73\163\x3d\42\155\42\x3e\46\156\x62\x73\x70\x3b\46\156\x62\x73\160\x3b\74\57\163\160\x61\156\76", explode("\60", $frameLine)); goto e2t6w; HHFN6: } goto hx_H1; dAGRZ: } public static function serial($frame) { return gzcompress(join("\xa", $frame), 9); } public static function unserial($code) { return explode("\12", gzuncompress($code)); } public static function newFrame($version) { goto XIE4b; ZLo_n: U9OZC: goto ct3WP; hSlVz: if (isset(self::$frames[$version])) { goto bQdXr; } goto xP8Cx; Dd4f6: if (QR_CACHEABLE) { goto m4mZ8; } goto jYZFI; Jdijh: LalCY: goto RZryp; ct3WP: return self::$frames[$version]; goto FLV5L; yHJIz: return null; goto g6DV0; cR1cB: self::$frames[$version] = self::unserial(file_get_contents($fileName)); goto IeCHh; GshRV: return null; goto ZLo_n; aYfxH: if (file_exists($fileName)) { goto Y0xq0; } goto psxGV; IeCHh: jeITl: goto Jdijh; vvs9e: m4mZ8: goto aYfxH; XT52j: file_put_contents($fileName, self::serial(self::$frames[$version])); goto apN08; z87lA: goto LalCY; goto vvs9e; RZryp: bQdXr: goto QIxJw; g6DV0: Rjk6m: goto hSlVz; QIxJw: if (!is_null(self::$frames[$version])) { goto U9OZC; } goto GshRV; jYZFI: self::$frames[$version] = self::createFrame($version); goto z87lA; psxGV: self::$frames[$version] = self::createFrame($version); goto XT52j; apN08: goto jeITl; goto N6fcv; N6fcv: Y0xq0: goto cR1cB; xP8Cx: $fileName = QR_CACHE_DIR . "\x66\162\x61\155\145\x5f" . $version . "\x2e\x64\x61\164"; goto Dd4f6; XIE4b: if (!($version < 1 || $version > QRSPEC_VERSION_MAX)) { goto Rjk6m; } goto yHJIz; FLV5L: } public static function rsBlockNum($spec) { return $spec[0] + $spec[3]; } public static function rsBlockNum1($spec) { return $spec[0]; } public static function rsDataCodes1($spec) { return $spec[1]; } public static function rsEccCodes1($spec) { return $spec[2]; } public static function rsBlockNum2($spec) { return $spec[3]; } public static function rsDataCodes2($spec) { return $spec[4]; } public static function rsEccCodes2($spec) { return $spec[2]; } public static function rsDataLength($spec) { return $spec[0] * $spec[1] + $spec[3] * $spec[4]; } public static function rsEccLength($spec) { return ($spec[0] + $spec[3]) * $spec[2]; } } goto Z_4Yh; fPEN8: define("\x51\x52\103\101\120\137\127\x49\104\124\110", 0); goto icuGF; SINw9: class QRsplit { public $dataStr = ''; public $input; public $modeHint; public function __construct($dataStr, $input, $modeHint) { goto X5CVa; LSznK: $this->modeHint = $modeHint; goto QpEAW; V7s66: $this->input = $input; goto LSznK; X5CVa: $this->dataStr = $dataStr; goto V7s66; QpEAW: } public static function isdigitat($str, $pos) { goto r9Q1X; r9Q1X: if (!($pos >= strlen($str))) { goto Q_F94; } goto zwNaP; Ic9is: return ord($str[$pos]) >= ord("\60") && ord($str[$pos]) <= ord("\x39"); goto NLbZS; zwNaP: return false; goto Q4bx8; Q4bx8: Q_F94: goto Ic9is; NLbZS: } public static function isalnumat($str, $pos) { goto FG5LO; hzA_R: return QRinput::lookAnTable(ord($str[$pos])) >= 0; goto UNdj3; FG5LO: if (!($pos >= strlen($str))) { goto uIAF6; } goto ugUD_; ugUD_: return false; goto M2fMI; M2fMI: uIAF6: goto hzA_R; UNdj3: } public function identifyMode($pos) { goto ACfwK; sHteC: return QR_MODE_NUM; goto L0i1p; RUCEV: if (!($this->modeHint == QR_MODE_KANJI)) { goto jE7oQ; } goto bEp4h; Xb1_l: if (self::isalnumat($this->dataStr, $pos)) { goto z5Uvu; } goto RUCEV; BvMWL: if (!($word >= 0x8140 && $word <= 0x9ffc || $word >= 0xe040 && $word <= 0xebbf)) { goto Tp3mQ; } goto aPfTW; Svge8: z5Uvu: goto grTv0; aPfTW: return QR_MODE_KANJI; goto IaBrw; grTv0: return QR_MODE_AN; goto SiBFT; IaBrw: Tp3mQ: goto PoVIZ; ACfwK: if (!($pos >= strlen($this->dataStr))) { goto fxT4Q; } goto HkPLm; hsAur: goto qCbZH; goto Svge8; PoVIZ: f2dTi: goto TQt3S; Z5xPu: $c = $this->dataStr[$pos]; goto x9g5K; XxWyi: $word = ord($c) << 8 | ord($d); goto BvMWL; VhSyY: fxT4Q: goto Z5xPu; L0i1p: jBHTO: goto LRERr; TQt3S: jE7oQ: goto hsAur; HkPLm: return QR_MODE_NUL; goto VhSyY; tmokz: goto jBHTO; goto HUnRp; LRERr: return QR_MODE_8; goto lQZVB; zm7HN: $d = $this->dataStr[$pos + 1]; goto XxWyi; x9g5K: if (self::isdigitat($this->dataStr, $pos)) { goto fYqAU; } goto Xb1_l; bEp4h: if (!($pos + 1 < strlen($this->dataStr))) { goto f2dTi; } goto zm7HN; HUnRp: fYqAU: goto sHteC; SiBFT: qCbZH: goto tmokz; lQZVB: } public function eatNum() { goto CyUYt; L0j32: t7Xbu: goto Y0L03; AGYn3: $p++; goto TZ2TR; KdfSf: xM144: goto gcrAK; MhY2b: LvpuC: goto pnGjH; kNF73: $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr)); goto gd2sR; CZ8gz: zOSFe: goto Ssjkn; brFnq: return $this->eatAn(); goto L0j32; t2dU2: if (!($mode == QR_MODE_8)) { goto LvpuC; } goto oaMF7; fudPV: return $this->eat8(); goto o8Eis; Y0L03: uKeq1: goto kNF73; o8Eis: A4mXe: goto MhY2b; CtA12: $p = 0; goto lmpTu; NvqG6: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsModeAn(1) - QRinput::estimateBitsModeAn($run + 1); goto uN39t; oaMF7: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto Uw3lE; CyUYt: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto CtA12; gkZNq: return -1; goto KdfSf; FWLMC: if (!self::isdigitat($this->dataStr, $p)) { goto zOSFe; } goto AGYn3; TZ2TR: goto Vt3r_; goto CZ8gz; Uw3lE: if (!($dif > 0)) { goto A4mXe; } goto fudPV; gd2sR: if (!($ret < 0)) { goto xM144; } goto gkZNq; gcrAK: return $run; goto n4G5X; pnGjH: if (!($mode == QR_MODE_AN)) { goto uKeq1; } goto NvqG6; Ssjkn: $run = $p; goto dkqTc; lmpTu: Vt3r_: goto FWLMC; uN39t: if (!($dif > 0)) { goto t7Xbu; } goto brFnq; dkqTc: $mode = $this->identifyMode($p); goto t2dU2; n4G5X: } public function eatAn() { goto ogxVx; l_wBC: piz53: goto L1LNK; HrgVx: goto ekoYc; goto ZBKrW; NkkBJ: $p = $q; goto IYrOB; DUuAi: HudSi: goto xL35L; c1b0s: gaBTD: goto VLLOH; TooJL: $p = 0; goto Qn0I9; cyvaX: s8qMl: goto l_wBC; iIKbE: Z2iW4: goto BLh5z; ogxVx: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto jCTFM; oTU4l: if ($dif < 0) { goto HudSi; } goto NkkBJ; FqOvG: CtAF4: goto MYqwl; B8BMw: $dif = QRinput::estimateBitsModeAn($run) + 4 + $la + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto fUfkl; IYrOB: goto CtAF4; goto DUuAi; zSp3j: if (!self::isalnumat($this->dataStr, $p)) { goto AXewS; } goto KVKsa; dw_tF: goto rObZ6; goto c1b0s; VLLOH: $q = $p; goto iIKbE; uuEe7: return -1; goto qIiVS; xdHp2: $q++; goto pjukf; BLh5z: if (!self::isdigitat($this->dataStr, $q)) { goto D7qPt; } goto xdHp2; MYqwl: rObZ6: goto HrgVx; I41hG: $dif = QRinput::estimateBitsModeAn($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsModeAn($q); goto oTU4l; eHneH: if (!($ret < 0)) { goto Av6V_; } goto uuEe7; Sp2Oa: if (self::isalnumat($this->dataStr, $p)) { goto piz53; } goto B8BMw; qIiVS: Av6V_: goto FwyyI; L1LNK: $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr)); goto eHneH; pg1Fk: return $this->eat8(); goto cyvaX; wSxl2: $run = $p; goto Sp2Oa; pjukf: goto Z2iW4; goto XVDFg; ZBKrW: AXewS: goto wSxl2; Qn0I9: ekoYc: goto zSp3j; fUfkl: if (!($dif > 0)) { goto s8qMl; } goto pg1Fk; FwyyI: return $run; goto Bg1gL; xL35L: goto AXewS; goto FqOvG; cSjii: $p++; goto dw_tF; XVDFg: D7qPt: goto I41hG; jCTFM: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto TooJL; KVKsa: if (self::isdigitat($this->dataStr, $p)) { goto gaBTD; } goto cSjii; Bg1gL: } public function eatKanji() { goto tvct4; tvct4: $p = 0; goto ZZZF1; ZZZF1: mcH8y: goto smN4y; yKVrC: $p += 2; goto ULG2a; Fo4pZ: JTdCB: goto HyR4m; LRj18: $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr)); goto RrhcB; RrhcB: if (!($ret < 0)) { goto JTdCB; } goto Bk2Zn; ULG2a: goto mcH8y; goto QoWfD; QoWfD: S2qpV: goto LRj18; Bk2Zn: return -1; goto Fo4pZ; HyR4m: return $run; goto xSzR8; smN4y: if (!($this->identifyMode($p) == QR_MODE_KANJI)) { goto S2qpV; } goto yKVrC; xSzR8: } public function eat8() { goto fc1MZ; v_Dpc: goto pS3r7; goto ZEtyf; OZFp6: goto UJLd5; goto qUxm9; KRoSN: UJLd5: goto bKob2; fc1MZ: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto Ai67o; xnLh7: goto pZnrP; goto Oq9ZV; DUrpi: DQNoN: goto dspf8; za3i0: uty17: goto TpC2x; dspf8: goto uty17; goto KRoSN; t0S8z: return $run; goto LBha6; B5wLq: if (!self::isdigitat($this->dataStr, $q)) { goto Unfru; } goto xyKr5; xyKr5: $q++; goto ZWXGm; PKlgL: if (!($ret < 0)) { goto r7IY5; } goto nnEyO; A84MW: $p++; goto xnLh7; xaU0f: goto UJLd5; goto BsbEA; Yg5Mk: goto Vh0xI; goto THK9b; sKvih: $mode = $this->identifyMode($p); goto FKDkL; qUxm9: pS3r7: goto jCKzQ; jCKzQ: pZnrP: goto U7EDO; iEP48: if ($mode == QR_MODE_NUM) { goto FRsew; } goto pk3ll; f68oZ: goto UJLd5; goto sDksu; FKDkL: if (!($mode == QR_MODE_KANJI)) { goto uLKgJ; } goto xaU0f; sDksu: L4SqT: goto DUrpi; G8apX: if ($dif < 0) { goto YPW4m; } goto arovm; arovm: $p = $q; goto bWv3C; bKob2: $run = $p; goto AwRiO; AwRiO: $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr)); goto PKlgL; THK9b: Id2wM: goto wEx_0; ZEtyf: ttuTY: goto OZFp6; xR4DD: $q = $p; goto zxPju; Rqhf_: FRsew: goto xR4DD; nnEyO: return -1; goto mYMAG; mYMAG: r7IY5: goto t0S8z; Oq9ZV: X2OWv: goto Vfzkv; ZWXGm: goto XesMa; goto w2Rig; pk3ll: if ($mode == QR_MODE_AN) { goto X2OWv; } goto A84MW; womfz: $dataStrLen = strlen($this->dataStr); goto za3i0; zxPju: XesMa: goto B5wLq; eDWtm: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsMode8($q); goto G8apX; wEx_0: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeAn($q - $p) + 4 + $la - QRinput::estimateBitsMode8($q); goto KZBT_; oH85q: Vh0xI: goto AN2ny; U_Crx: $p = 1; goto womfz; i5GmD: $q++; goto Yg5Mk; jJ7Cx: $p = $q; goto v_Dpc; AN2ny: if (!self::isalnumat($this->dataStr, $q)) { goto Id2wM; } goto i5GmD; TpC2x: if (!($p < $dataStrLen)) { goto UJLd5; } goto sKvih; Vfzkv: $q = $p; goto oH85q; dFEIk: YPW4m: goto f68oZ; BsbEA: uLKgJ: goto iEP48; bWv3C: goto L4SqT; goto dFEIk; Ai67o: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto U_Crx; KZBT_: if ($dif < 0) { goto ttuTY; } goto jJ7Cx; w2Rig: Unfru: goto eDWtm; U7EDO: goto DQNoN; goto Rqhf_; LBha6: } public function splitString() { goto Jm3dv; xhyHA: if (!($this->dataStr == '')) { goto d2q9a; } goto gWxmB; zbrbP: LLQ9u: goto sV4zB; Nnm5s: if (!($length < 0)) { goto TAPIJ; } goto NgB_z; n7mSa: TAPIJ: goto UvUxJ; Jm3dv: BFbtJ: goto DC7YR; gWxmB: return 0; goto sFntg; D4J2a: switch ($mode) { case QR_MODE_NUM: $length = $this->eatNum(); goto NzlvE; case QR_MODE_AN: $length = $this->eatAn(); goto NzlvE; case QR_MODE_KANJI: goto xysN6; xysN6: if ($hint == QR_MODE_KANJI) { goto yaTX3; } goto Xnz8N; sM36s: yaTX3: goto EghZh; EghZh: $length = $this->eatKanji(); goto EGRz2; CWNoh: goto NasEj; goto sM36s; EGRz2: NasEj: goto ozYhz; Xnz8N: $length = $this->eat8(); goto CWNoh; ozYhz: goto NzlvE; goto s599Q; s599Q: default: $length = $this->eat8(); goto NzlvE; } goto zbrbP; lipP8: goto BFbtJ; goto hmIUC; qFeTh: if (!($length == 0)) { goto fg5mC; } goto Zpm_V; DC7YR: if (!(strlen($this->dataStr) > 0)) { goto BnIiT; } goto xhyHA; z1LXI: $mode = $this->identifyMode(0); goto D4J2a; UvUxJ: $this->dataStr = substr($this->dataStr, $length); goto lipP8; hmIUC: BnIiT: goto oE21N; a2737: fg5mC: goto Nnm5s; Zpm_V: return 0; goto a2737; NgB_z: return -1; goto n7mSa; sFntg: d2q9a: goto z1LXI; sV4zB: NzlvE: goto qFeTh; oE21N: } public function toUpper() { goto HPMiJ; pxyPG: if ($mode == QR_MODE_KANJI) { goto qXovG; } goto IBRLF; XGyCD: $p++; goto ws4zq; ST236: if (!($p < $stringLen)) { goto WpPHN; } goto MGslQ; IBRLF: if (!(ord($this->dataStr[$p]) >= ord("\141") && ord($this->dataStr[$p]) <= ord("\x7a"))) { goto pXgJ2; } goto Y8d28; yJSV7: qXovG: goto AwSTq; MGslQ: $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint); goto pxyPG; cWc28: pXgJ2: goto XGyCD; AwSTq: $p += 2; goto ZI3GQ; ZwkVS: return $this->dataStr; goto jvAI5; HPMiJ: $stringLen = strlen($this->dataStr); goto ssx3I; N3vf5: PQVxR: goto ST236; Y8d28: $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32); goto cWc28; ssx3I: $p = 0; goto N3vf5; X2YWj: WpPHN: goto ZwkVS; IWc2t: goto PQVxR; goto X2YWj; ws4zq: goto z73yz; goto yJSV7; ZI3GQ: z73yz: goto IWc2t; jvAI5: } public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true) { goto nC91U; x0YZV: return $split->splitString(); goto fX9qd; xkBeG: if ($casesensitive) { goto SlU09; } goto S4DEs; Plza5: SlU09: goto x0YZV; xZ_Tu: x1Ryg: goto TrrZK; TrrZK: $split = new QRsplit($string, $input, $modeHint); goto xkBeG; nC91U: if (!(is_null($string) || $string == "\x5c\60" || $string == '')) { goto x1Ryg; } goto gmE_1; S4DEs: $split->toUpper(); goto Plza5; gmE_1: throw new Exception("\x65\x6d\x70\164\171\x20\163\164\162\x69\156\x67\41\x21\x21"); goto xZ_Tu; fX9qd: } } goto CG9qc; byQ5i: define("\116\x34", 10); goto vqBDP; OAcEY: define("\121\122\137\x46\x49\116\104\137\x46\x52\x4f\x4d\137\x52\x41\x4e\104\117\115", 2); goto jDC4R; g7iWT: class QRinputItem { public $mode; public $size; public $data; public $bstream; public function __construct($mode, $size, $data, $bstream = null) { goto VfUQ4; GXY1P: if (!(count($setData) < $size)) { goto Df3N1; } goto AQdVS; WSB2S: $this->size = $size; goto Ag_TL; CG06D: $this->bstream = $bstream; goto RNjyG; OMjml: throw new Exception("\105\x72\162\157\162\40\155\x3a" . $mode . "\54\x73\72" . $size . "\x2c\144\72" . join("\54", $setData)); goto mmoe6; Ag_TL: $this->data = $setData; goto CG06D; mmoe6: return null; goto SZ8BP; AQdVS: $setData = array_merge($setData, array_fill(0, $size - count($setData), 0)); goto xv0sB; xv0sB: Df3N1: goto hl7O4; hl7O4: if (QRinput::check($mode, $size, $setData)) { goto PfSeh; } goto OMjml; PcIdH: $this->mode = $mode; goto WSB2S; VfUQ4: $setData = array_slice($data, 0, $size); goto GXY1P; SZ8BP: PfSeh: goto PcIdH; RNjyG: } public function encodeModeNum($version) { try { goto ii3Ql; ii3Ql: $words = (int) ($this->size / 3); goto BArnz; vdQyV: $bs->appendNum(4, $val); goto ypzsC; KDy6r: goto mf7aP; goto h5EHk; Vdaiu: $val = ord($this->data[$words * 3]) - ord("\60"); goto Yr3yg; bleCX: uW0KR: goto Hqfdv; SZkYj: $val += ord($this->data[$words * 3 + 1]) - ord("\x30"); goto KGHsG; WzRjG: if (!($i < $words)) { goto z3UhH; } goto UchWV; JNl2T: mf7aP: goto WzRjG; AUtHO: $i++; goto KDy6r; Yr3yg: $bs->appendNum(4, $val); goto bleCX; FEQbr: au0aZ: goto Vdaiu; Hqfdv: $this->bstream = $bs; goto B91Qy; BArnz: $bs = new QRbitstream(); goto s73Z0; B91Qy: return 0; goto v2DL6; XM4ue: goto uW0KR; goto FEQbr; h5EHk: z3UhH: goto tgHdw; rv8G2: $bs->appendNum(10, $val); goto XUDdf; D1HJh: lyDyF: goto XM4ue; NsGih: if (!($this->size - $words * 3 == 2)) { goto lyDyF; } goto SoG9N; s73Z0: $val = 0x1; goto vdQyV; UchWV: $val = (ord($this->data[$i * 3]) - ord("\60")) * 100; goto xRcmw; XUDdf: gDyMG: goto AUtHO; SoG9N: $val = (ord($this->data[$words * 3]) - ord("\x30")) * 10; goto SZkYj; woqaz: $val += ord($this->data[$i * 3 + 2]) - ord("\x30"); goto rv8G2; ypzsC: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size); goto lnIgp; tgHdw: if ($this->size - $words * 3 == 1) { goto au0aZ; } goto NsGih; KGHsG: $bs->appendNum(7, $val); goto D1HJh; lnIgp: $i = 0; goto JNl2T; xRcmw: $val += (ord($this->data[$i * 3 + 1]) - ord("\x30")) * 10; goto woqaz; v2DL6: } catch (Exception $e) { return -1; } } public function encodeModeAn($version) { try { goto YgZd2; jLE_U: return 0; goto QmY5S; Kqcz7: $bs->appendNum(11, $val); goto jvK94; fEQnK: CZX_Q: goto Xibth; lQb43: $val = (int) QRinput::lookAnTable(ord($this->data[$i * 2])) * 45; goto b7l9A; rGSQM: $this->bstream = $bs; goto jLE_U; Nb8zw: $i = 0; goto fEQnK; jvK94: VPPl8: goto J32FZ; Tg4lI: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size); goto Nb8zw; Xibth: if (!($i < $words)) { goto j2oj5; } goto lQb43; ulaXU: $bs = new QRbitstream(); goto WI04i; cQbmo: $bs->appendNum(6, $val); goto NZ0KB; NZ0KB: n1pHa: goto rGSQM; Fj9y2: j2oj5: goto IbgaC; b7l9A: $val += (int) QRinput::lookAnTable(ord($this->data[$i * 2 + 1])); goto Kqcz7; YgZd2: $words = (int) ($this->size / 2); goto ulaXU; ECLJr: $val = QRinput::lookAnTable(ord($this->data[$words * 2])); goto cQbmo; aT643: goto CZX_Q; goto Fj9y2; J32FZ: $i++; goto aT643; WI04i: $bs->appendNum(4, 0x2); goto Tg4lI; IbgaC: if (!($this->size & 1)) { goto n1pHa; } goto ECLJr; QmY5S: } catch (Exception $e) { return -1; } } public function encodeMode8($version) { try { goto bFSq3; yQxjX: if (!($i < $this->size)) { goto qXWF2; } goto NR_3K; g2Iza: $bs->appendNum(4, 0x4); goto AIydk; y_rTR: zHWAc: goto yQxjX; YB0kJ: goto zHWAc; goto qGOLM; bFSq3: $bs = new QRbitstream(); goto g2Iza; hbOFz: ZXo5v: goto Fq1w8; dCS3t: $this->bstream = $bs; goto UpHJY; UpHJY: return 0; goto StcZf; NR_3K: $bs->appendNum(8, ord($this->data[$i])); goto hbOFz; qGOLM: qXWF2: goto dCS3t; cdhYf: $i = 0; goto y_rTR; AIydk: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size); goto cdhYf; Fq1w8: $i++; goto YB0kJ; StcZf: } catch (Exception $e) { return -1; } } public function encodeModeKanji($version) { try { goto yDG87; IGuLu: $val -= 0xc140; goto VFE1l; wW4jH: $val = ($val & 0xff) + $h; goto dNIq8; bBxer: $this->bstream = $bs; goto rT3hX; vmBRz: $i += 2; goto F1D6b; yDG87: $bs = new QRbitrtream(); goto s3VxI; dNIq8: $bs->appendNum(13, $val); goto It7fY; kFuQU: $val = ord($this->data[$i]) << 8 | ord($this->data[$i + 1]); goto pQnb2; s3VxI: $bs->appendNum(4, 0x8); goto D5gbK; VFE1l: goto tQFni; goto JtNvF; GgNVE: $h = ($val >> 8) * 0xc0; goto wW4jH; OdCav: TYajb: goto wXLRx; It7fY: fQbvq: goto vmBRz; e87lV: tF7vj: goto bBxer; JtNvF: PEwIJ: goto K9vz1; wZ4B9: tQFni: goto GgNVE; LHo8W: $i = 0; goto OdCav; K9vz1: $val -= 0x8140; goto wZ4B9; F1D6b: goto TYajb; goto e87lV; pQnb2: if ($val <= 0x9ffc) { goto PEwIJ; } goto IGuLu; wXLRx: if (!($i < $this->size)) { goto tF7vj; } goto kFuQU; rT3hX: return 0; goto X1Thl; D5gbK: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int) ($this->size / 2)); goto LHo8W; X1Thl: } catch (Exception $e) { return -1; } } public function encodeModeStructure() { try { goto Hoka2; MxaWe: $this->bstream = $bs; goto dME4k; pgLC8: $bs->appendNum(4, ord($this->data[1]) - 1); goto pePAj; Hoka2: $bs = new QRbitstream(); goto zrIpV; zP1O6: $bs->appendNum(8, ord($this->data[2])); goto MxaWe; dME4k: return 0; goto paYb8; zrIpV: $bs->appendNum(4, 0x3); goto pgLC8; pePAj: $bs->appendNum(4, ord($this->data[0]) - 1); goto zP1O6; paYb8: } catch (Exception $e) { return -1; } } public function estimateBitStreamSizeOfEntry($version) { goto SNtnt; fMGr0: Nngm2: goto uZo20; T8vpx: if (!($version == 0)) { goto Nngm2; } goto BoC7i; A5YE_: $m = 1 << $l; goto xQeae; uZo20: switch ($this->mode) { case QR_MODE_NUM: $bits = QRinput::estimateBitsModeNum($this->size); goto ji0S3; case QR_MODE_AN: $bits = QRinput::estimateBitsModeAn($this->size); goto ji0S3; case QR_MODE_8: $bits = QRinput::estimateBitsMode8($this->size); goto ji0S3; case QR_MODE_KANJI: $bits = QRinput::estimateBitsModeKanji($this->size); goto ji0S3; case QR_MODE_STRUCTURE: return STRUCTURE_HEADER_BITS; default: return 0; } goto PrYVu; ti24u: ji0S3: goto CyUlo; SNtnt: $bits = 0; goto T8vpx; CyUlo: $l = QRspec::lengthIndicator($this->mode, $version); goto A5YE_; G0Evr: $bits += $num * (4 + $l); goto KlSDg; xQeae: $num = (int) (($this->size + $m - 1) / $m); goto G0Evr; PrYVu: RGSMb: goto ti24u; BoC7i: $version = 1; goto fMGr0; KlSDg: return $bits; goto I_L9q; I_L9q: } public function encodeBitStream($version) { try { goto Cd3yP; QaPKr: $st2->encodeBitStream($version); goto k_tM7; Xu5Hd: aEGSY: goto I5Hew; fBKUq: tGdHx: goto Xu5Hd; lpmp3: RmUl3: goto Ofo5c; VEP2r: $ret = 0; goto Dgy6E; a2Al9: $this->bstream->append($st1->bstream); goto YTUkR; ZrCqO: $st1 = new QRinputItem($this->mode, $words, $this->data); goto Qzv4o; ou1Cd: return $this->bstream->size(); goto lbn4D; YTUkR: $this->bstream->append($st2->bstream); goto wiJfi; gPFaG: $words = QRspec::maximumWords($this->mode, $version); goto Otcrg; Otcrg: if ($this->size > $words) { goto lttH_; } goto VEP2r; Dgy6E: switch ($this->mode) { case QR_MODE_NUM: $ret = $this->encodeModeNum($version); goto aEGSY; case QR_MODE_AN: $ret = $this->encodeModeAn($version); goto aEGSY; case QR_MODE_8: $ret = $this->encodeMode8($version); goto aEGSY; case QR_MODE_KANJI: $ret = $this->encodeModeKanji($version); goto aEGSY; case QR_MODE_STRUCTURE: $ret = $this->encodeModeStructure(); goto aEGSY; default: goto aEGSY; } goto fBKUq; k_tM7: $this->bstream = new QRbitstream(); goto a2Al9; lzZwy: lttH_: goto ZrCqO; v_UrA: $st1->encodeBitStream($version); goto QaPKr; Cd3yP: unset($this->bstream); goto gPFaG; I5Hew: if (!($ret < 0)) { goto RmUl3; } goto voY81; Qzv4o: $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words)); goto v_UrA; ub9SB: unset($st2); goto sGakf; wiJfi: unset($st1); goto ub9SB; sGakf: rWMLG: goto ou1Cd; Ofo5c: goto rWMLG; goto lzZwy; voY81: return -1; goto lpmp3; lbn4D: } catch (Exception $e) { return -1; } } } goto SCJbv; gOz6J: define("\x4e\63", 40); goto byQ5i; vqBDP: class QRmask { public $runLength = array(); public function __construct() { $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0); } public function writeFormatInformation($width, &$frame, $mask, $level) { goto lD2nN; ZZX5e: $frame[$width - 7 + $i][8] = chr($v); goto tyCtN; e9SJl: $v = 0x85; goto R2Agb; QCkfi: goto DxB7U; goto cgqVi; PfW2A: sSqJG: goto jYnb7; CYrvN: goto UUUVd; goto pZ_Yb; KZRAO: if ($i < 6) { goto n5G8i; } goto pGkxP; fCF2p: if ($format & 1) { goto L140u; } goto rBwID; pj1DI: $blacks += 2; goto djTWI; HueHc: UUUVd: goto Tf4nI; Ry1zJ: if ($format & 1) { goto DXvgt; } goto cR1uU; xHH31: if (!($i < 7)) { goto sSqJG; } goto fCF2p; vPIOF: $frame[8][6 - $i] = chr($v); goto QCkfi; mim0U: $i = 0; goto HioOH; t6i41: ZiLIQ: goto xHH31; JBXFx: $blacks += 2; goto e9SJl; cgqVi: FJEUM: goto LEnSI; cR1uU: $v = 0x84; goto lDwJJ; djTWI: $v = 0x85; goto Wp759; ezaFl: $i++; goto EMpyJ; pZ_Yb: n5G8i: goto slxZr; xHc9_: $format = $format >> 1; goto jQFgS; lD2nN: $blacks = 0; goto KNcyl; Tf4nI: $format = $format >> 1; goto VyPaf; jOTDA: L140u: goto pj1DI; LEnSI: $frame[8][7] = chr($v); goto JaRcH; Wp759: fWHnP: goto ZZX5e; lDlng: $i = 0; goto t6i41; v4gVx: $frame[8][$width - 1 - $i] = chr($v); goto KZRAO; JaRcH: DxB7U: goto xHc9_; HioOH: pcUb3: goto Jk3G1; pGkxP: $frame[$i + 1][8] = chr($v); goto CYrvN; GK6_H: goto fWHnP; goto jOTDA; eiSb0: goto ZiLIQ; goto PfW2A; jQFgS: vaieQ: goto zatiP; VyPaf: QByno: goto ezaFl; jYnb7: return $blacks; goto mLQn5; zatiP: $i++; goto eiSb0; KNcyl: $format = QRspec::getFormatInfo($mask, $level); goto mim0U; Jk3G1: if (!($i < 8)) { goto M5HYd; } goto Ry1zJ; R2Agb: b2Wd2: goto v4gVx; M1LiR: DXvgt: goto JBXFx; rBwID: $v = 0x84; goto GK6_H; lDwJJ: goto b2Wd2; goto M1LiR; slxZr: $frame[$i][8] = chr($v); goto HueHc; EMpyJ: goto pcUb3; goto gQcTk; gQcTk: M5HYd: goto lDlng; tyCtN: if ($i == 0) { goto FJEUM; } goto vPIOF; mLQn5: } public function mask0($x, $y) { return $x + $y & 1; } public function mask1($x, $y) { return $y & 1; } public function mask2($x, $y) { return $x % 3; } public function mask3($x, $y) { return ($x + $y) % 3; } public function mask4($x, $y) { return (int) ($y / 2) + (int) ($x / 3) & 1; } public function mask5($x, $y) { return ($x * $y & 1) + $x * $y % 3; } public function mask6($x, $y) { return ($x * $y & 1) + $x * $y % 3 & 1; } public function mask7($x, $y) { return $x * $y % 3 + ($x + $y & 1) & 1; } private function generateMaskNo($maskNo, $width, $frame) { goto SvXNo; Mkjqs: return $bitMask; goto l6dty; dOqGV: $y++; goto LZ8kH; x6t5S: goto n8gKS; goto tYbpL; kauv_: $y = 0; goto FcbJ8; hiJTb: $x = 0; goto Xw3_a; SvXNo: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto kauv_; LZ8kH: goto OAn2v; goto RDUxl; kGOYX: goto stWye; goto E8dvY; gcQ4p: n8gKS: goto D7LNB; v9u3g: $x++; goto kGOYX; voVLV: $bitMask[$y][$x] = 0; goto gcQ4p; OPWmU: if (ord($frame[$y][$x]) & 0x80) { goto zVyEL; } goto MGs4R; Jcn9c: P1CRG: goto dOqGV; JGIki: $bitMask[$y][$x] = $maskFunc == 0 ? 1 : 0; goto x6t5S; tYbpL: zVyEL: goto voVLV; ce2Rr: if (!($x < $width)) { goto URRbR; } goto OPWmU; FcbJ8: OAn2v: goto z6rgV; RDUxl: QjlSp: goto Mkjqs; MGs4R: $maskFunc = call_user_func(array($this, "\x6d\x61\x73\153" . $maskNo), $x, $y); goto JGIki; z6rgV: if (!($y < $width)) { goto QjlSp; } goto hiJTb; Xw3_a: stWye: goto ce2Rr; E8dvY: URRbR: goto Jcn9c; D7LNB: tPXuS: goto v9u3g; l6dty: } public static function serial($bitFrame) { goto wiyJS; gRDM5: return gzcompress(join("\12", $codeArr), 9); goto Tn3Kh; GUY3H: foreach ($bitFrame as $line) { $codeArr[] = join('', $line); xjkqm: } goto y96J8; wiyJS: $codeArr = array(); goto GUY3H; y96J8: xvFkg: goto gRDM5; Tn3Kh: } public static function unserial($code) { goto O51aO; O51aO: $codeArr = array(); goto HGkKf; dquDW: return $codeArr; goto EZkSc; HGkKf: $codeLines = explode("\12", gzuncompress($code)); goto IWwwq; sXOUH: EoHia: goto dquDW; IWwwq: foreach ($codeLines as $line) { $codeArr[] = str_split($line); Ii3WF: } goto sXOUH; EZkSc: } public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false) { goto H0L0L; lZl9A: $bitMask = array(); goto Aiw0_; GZS8V: EVneZ: goto UGNPp; XfQ69: rwb7d: goto icj4r; O2iPs: if (!$maskGenOnly) { goto h6Oip; } goto t59Zp; UGNPp: $y++; goto ZoRwE; jRDfC: if (!($y < $width)) { goto rwb7d; } goto tez_R; QreYQ: if (QR_CACHEABLE) { goto DqDd1; } goto ggAt0; su90X: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto R7Jkc; qACFM: goto sJ1Y1; goto uIBSO; ejGMe: JErfK: goto Wvkwj; ZoRwE: goto TUnfu; goto XfQ69; icj4r: return $b; goto Bvnkp; H0L0L: $b = 0; goto lZl9A; rT1V0: $b += (int) (ord($d[$y][$x]) & 1); goto Ic2Yg; dB93O: file_put_contents($fileName, self::serial($bitMask)); goto kc2cF; R7Jkc: if (file_exists(QR_CACHE_DIR . "\155\141\163\x6b\137" . $maskNo)) { goto S11h2; } goto sKbkF; sKbkF: mkdir(QR_CACHE_DIR . "\x6d\141\x73\x6b\x5f" . $maskNo); goto ygFLP; DCrMN: h6Oip: goto P568m; pp04h: $y = 0; goto eLyvy; OZOwZ: mp4Pp: goto rT1V0; uIBSO: DqDd1: goto Fu3Er; zD0jp: if (!($bitMask[$y][$x] == 1)) { goto mp4Pp; } goto z14Ax; P568m: $d = $s; goto pp04h; eLyvy: TUnfu: goto jRDfC; GDrof: NGT2j: goto edWo1; Ic2Yg: uPXbh: goto VNoXP; edWo1: if (!($x < $width)) { goto atL94; } goto zD0jp; tez_R: $x = 0; goto GDrof; kc2cF: goto JErfK; goto a7Ky0; Fu3Er: if (file_exists($fileName)) { goto xcGgL; } goto su90X; z14Ax: $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]); goto OZOwZ; t59Zp: return; goto DCrMN; zbFMU: $bitMask = self::unserial(file_get_contents($fileName)); goto ejGMe; V5lJO: goto NGT2j; goto wUd4P; Aiw0_: $fileName = QR_CACHE_DIR . "\155\141\x73\x6b\x5f" . $maskNo . DIRECTORY_SEPARATOR . "\x6d\x61\163\x6b\x5f" . $width . "\x5f" . $maskNo . "\x2e\144\x61\x74"; goto QreYQ; Wvkwj: sJ1Y1: goto O2iPs; ygFLP: S11h2: goto dB93O; wUd4P: atL94: goto GZS8V; ggAt0: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto qACFM; VNoXP: $x++; goto V5lJO; a7Ky0: xcGgL: goto zbFMU; Bvnkp: } public function makeMask($width, $frame, $maskNo, $level) { goto TnL0Z; irwdS: $this->makeMaskNo($maskNo, $width, $frame, $masked); goto XCvNt; XCvNt: $this->writeFormatInformation($width, $masked, $maskNo, $level); goto KS5St; KS5St: return $masked; goto fyC_U; TnL0Z: $masked = array_fill(0, $width, str_repeat("\0", $width)); goto irwdS; fyC_U: } public function calcN1N3($length) { goto V6ZAG; bAVyV: if (!($i & 1)) { goto Os1Cq; } goto vAhRH; XVcUB: $demerit += N1 + ($this->runLength[$i] - 5); goto mzsRL; IjRZH: goto omqas; goto zmnL9; oBtEv: r1t45: goto XM6V6; KTO71: wnOG9: goto Uw_zD; tIhvw: N_b1s: goto yyodZ; vAhRH: if (!($i >= 3 && $i < $length - 2 && $this->runLength[$i] % 3 == 0)) { goto r1t45; } goto i0Muz; rzmEZ: HSPwu: goto wMc85; wAEI4: if (!($this->runLength[$i] >= 5)) { goto olJH2; } goto XVcUB; i0Muz: $fact = (int) ($this->runLength[$i] / 3); goto OUvSt; wxPsT: if (!($i + 3 >= $length || $this->runLength[$i + 3] >= 4 * $fact)) { goto ZwgD_; } goto fI9wJ; XM6V6: Os1Cq: goto KTO71; XT1_4: Z9EuY: goto oBtEv; yyodZ: if (!($i < $length)) { goto HSPwu; } goto wAEI4; mzsRL: olJH2: goto bAVyV; PVu78: $i = 0; goto tIhvw; iblUN: ZwgD_: goto IjRZH; fI9wJ: $demerit += N3; goto iblUN; OUvSt: if (!($this->runLength[$i - 2] == $fact && $this->runLength[$i - 1] == $fact && $this->runLength[$i + 1] == $fact && $this->runLength[$i + 2] == $fact)) { goto Z9EuY; } goto HprAV; V6ZAG: $demerit = 0; goto PVu78; zmnL9: p5_7Y: goto kQbw0; kQbw0: $demerit += N3; goto NexlV; c22jH: goto N_b1s; goto rzmEZ; wMc85: return $demerit; goto of3dl; HprAV: if ($this->runLength[$i - 3] < 0 || $this->runLength[$i - 3] >= 4 * $fact) { goto p5_7Y; } goto wxPsT; NexlV: omqas: goto XT1_4; Uw_zD: $i++; goto c22jH; of3dl: } public function evaluateSymbol($width, $frame) { goto DnXS_; N9ZYF: $x = 0; goto Ynrwi; NvDTT: $head = 1; goto lGJ5e; FWggl: goto mndlz; goto iTGmf; c7MTN: goto BlQKM; goto inpJf; FSwXw: $x++; goto c7MTN; MKig1: if (!($y > 0)) { goto KQ3d0; } goto PFxba; uATLm: return $demerit; goto jLg0n; Qi6wW: $head++; goto Dm9B_; syGk3: dEkBZ: goto FSwXw; iTGmf: C2MR0: goto eAqW3; Fq9Cd: $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]); goto GnTjG; ijoQt: goto IjCLu; goto G4g7Q; wrCOK: $this->runLength[$head]++; goto js9H0; PR030: $y = 0; goto lAz4b; uAZeS: dxjQj: goto N9ZYF; JmpZY: $this->runLength[0] = -1; goto NvDTT; s6Tqu: $this->runLength[$head] = 1; goto kZo4W; nvkeK: $this->runLength[$head]++; goto ug5Uo; kZo4W: mndlz: goto Ae89K; n6sbs: bMw4a: goto kSXjT; OzLf2: $frameYM = $frame[$y - 1]; goto uAZeS; BfcA3: if (!($x > 0 && $y > 0)) { goto cSok2; } goto kr8Jz; wDsls: if (!($x < $width)) { goto TORYO; } goto BfcA3; x9zNu: jWAgG: goto Sdya3; gEqcZ: O35ft: goto x9zNu; Qvy93: $head = 0; goto pUHHv; anCh4: ItH0B: goto LgW71; GnTjG: if (!(($b22 | $w22 ^ 1) & 1)) { goto GAXMr; } goto Vpzze; G4g7Q: O9rlk: goto u6k05; pUHHv: $this->runLength[0] = 1; goto I0_zN; dIyLd: TytRh: goto Odeej; pBRbq: if (!($y > 0)) { goto dxjQj; } goto OzLf2; Ynrwi: BlQKM: goto wDsls; N7U1b: dyETA: goto VNxt4; kr8Jz: $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]); goto Fq9Cd; Sdya3: goto CinGy; goto E0Q1r; u6k05: $demerit += $this->calcN1N3($head + 1); goto N7U1b; X8ptp: $x = 0; goto dIyLd; byQNc: $y++; goto ijoQt; L8OjF: CinGy: goto syGk3; J3gz0: $y = 0; goto Fxj7g; a2Hnn: veqgF: goto Qi6wW; N_uz3: $this->runLength[$head] = 1; goto vwdcU; WD34g: if (!($y < $width)) { goto O9rlk; } goto k3HHh; Ga1l9: $head = 1; goto s6Tqu; TQU_W: $demerit = 0; goto PR030; Q0ZIt: if (!($y < $width)) { goto Hloo3; } goto Qvy93; js9H0: goto O35ft; goto a2Hnn; lAz4b: AEp_o: goto Q0ZIt; PFxba: if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) { goto bMw4a; } goto nvkeK; Vpzze: $demerit += N2; goto wcweZ; Fxj7g: IjCLu: goto WD34g; Odeej: if (!($x < $width)) { goto ZjRGe; } goto Ey32T; ecDie: Hloo3: goto X8ptp; pqzFR: ZjRGe: goto uATLm; jL9uK: goto TytRh; goto pqzFR; uQAHW: cSok2: goto Yz6J4; E0Q1r: H0w3G: goto JmpZY; kSXjT: $head++; goto N_uz3; xLZv7: KQ3d0: goto FWggl; Ey32T: $head = 0; goto hNio0; VNxt4: $x++; goto jL9uK; DnXS_: $head = 0; goto TQU_W; eAqW3: $this->runLength[0] = -1; goto Ga1l9; wcweZ: GAXMr: goto uQAHW; U6qwS: goto AEp_o; goto ecDie; Yz6J4: if ($x == 0 && ord($frameY[$x]) & 1) { goto H0w3G; } goto PrnkQ; Ae89K: BBmM7: goto byQNc; lGJ5e: $this->runLength[$head] = 1; goto L8OjF; Dm9B_: $this->runLength[$head] = 1; goto gEqcZ; T0TNI: if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) { goto veqgF; } goto wrCOK; I0_zN: $frameY = $frame[$y]; goto pBRbq; k3HHh: if ($y == 0 && ord($frame[$y][$x]) & 1) { goto C2MR0; } goto MKig1; ug5Uo: goto AcULY; goto n6sbs; Y3LQy: $demerit += $this->calcN1N3($head + 1); goto anCh4; vwdcU: AcULY: goto xLZv7; hNio0: $this->runLength[0] = 1; goto J3gz0; LgW71: $y++; goto U6qwS; PrnkQ: if (!($x > 0)) { goto jWAgG; } goto T0TNI; inpJf: TORYO: goto Y3LQy; jLg0n: } public function mask($width, $frame, $level) { goto iEYun; UZFdS: hOtkZ: goto mtLhO; wjs0i: $checked_masks = array_values($checked_masks); goto QayWC; bkRWd: $howManuOut = 8 - QR_FIND_FROM_RANDOM % 9; goto IFl0Z; av0Jh: unset($checked_masks[$remPos]); goto wjs0i; N9bbo: L4w32: goto NA485; mtLhO: if (!($i < $howManuOut)) { goto ZJXlh; } goto qfwh6; NA485: $bestMask = $frame; goto vqo8d; IFl0Z: $i = 0; goto UZFdS; up2ig: $i++; goto LMZ2K; RVsk8: $checked_masks = array(0, 1, 2, 3, 4, 5, 6, 7); goto c0IjL; qfwh6: $remPos = rand(0, count($checked_masks) - 1); goto av0Jh; QayWC: IcZl2: goto up2ig; kC0Z4: $bestMaskNum = 0; goto gOdin; iEYun: $minDemerit = PHP_INT_MAX; goto kC0Z4; Hf5FG: return $bestMask; goto pIj1g; vqo8d: foreach ($checked_masks as $i) { goto vXBX0; VKYhQ: $bestMaskNum = $i; goto QgY3p; zN6HM: $blacks += $this->writeFormatInformation($width, $mask, $i, $level); goto yJ9nQ; kxY7f: if (!($demerit < $minDemerit)) { goto TA8p_; } goto SS6Uq; FYvEP: $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4); goto co_b2; rt5D0: $bestMask = $mask; goto VKYhQ; QuRV7: $blacks = 0; goto xwrB7; hlG5D: y7Co5: goto FeWkq; xwrB7: $blacks = $this->makeMaskNo($i, $width, $frame, $mask); goto zN6HM; QgY3p: TA8p_: goto hlG5D; ng8vp: $demerit = 0; goto QuRV7; co_b2: $demerit += $this->evaluateSymbol($width, $mask); goto kxY7f; SS6Uq: $minDemerit = $demerit; goto rt5D0; vXBX0: $mask = array_fill(0, $width, str_repeat("\0", $width)); goto ng8vp; yJ9nQ: $blacks = (int) (100 * $blacks / ($width * $width)); goto FYvEP; FeWkq: } goto JVhj3; c0IjL: if (!(QR_FIND_FROM_RANDOM !== false)) { goto L4w32; } goto bkRWd; JVhj3: UAqu2: goto Hf5FG; LMZ2K: goto hOtkZ; goto gjNwI; gOdin: $bestMask = array(); goto RVsk8; gjNwI: ZJXlh: goto N9bbo; pIj1g: } } goto pZ5Bp; g2z5D: define("\x4e\x31", 3); goto BxkNE; FXNp2: define("\x51\122\x5f\106\x4f\122\115\101\124\x5f\120\116\x47", 1); goto vj89A; ceiyQ: define("\x51\x52\137\x43\101\x43\x48\x45\x41\x42\114\x45", false); goto l61rO; ve2De: define("\x51\122\123\120\x45\103\x5f\126\105\122\123\111\x4f\x4e\137\x4d\x41\x58", 40); goto SV2SQ; BxkNE: define("\116\x32", 3); goto gOz6J; edcA7: define("\x51\122\137\x4d\x4f\104\x45\x5f\116\125\x4d", 0); goto KYu0R; BXRn7: class QRencode { public $casesensitive = true; public $eightbit = false; public $version = 0; public $size = 3; public $margin = 4; public $structured = 0; public $level = QR_ECLEVEL_L; public $hint = QR_MODE_8; public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4) { goto cDueS; cDueS: $enc = new QRencode(); goto lGpeX; kzdbJ: $enc->margin = $margin; goto Zeu7m; lGpeX: $enc->size = $size; goto kzdbJ; ELC1n: qaN1R: goto xp_6v; Zeu7m: switch ($level . '') { case "\x30": case "\61": case "\62": case "\63": $enc->level = $level; goto qaN1R; case "\x6c": case "\114": $enc->level = QR_ECLEVEL_L; goto qaN1R; case "\x6d": case "\x4d": $enc->level = QR_ECLEVEL_M; goto qaN1R; case "\x71": case "\x51": $enc->level = QR_ECLEVEL_Q; goto qaN1R; case "\150": case "\110": $enc->level = QR_ECLEVEL_H; goto qaN1R; } goto Nk67J; Nk67J: W5e1i: goto ELC1n; xp_6v: return $enc; goto vRcNu; vRcNu: } public function encodeRAW($intext, $outfile = false) { goto FTleM; JIAq0: xoIWM: goto YltCW; CN5A1: goto Njwko; goto JIAq0; TYjKA: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto CN5A1; bil79: if ($this->eightbit) { goto xoIWM; } goto TYjKA; TrAg2: Njwko: goto QbzBf; YltCW: $code->encodeString8bit($intext, $this->version, $this->level); goto TrAg2; QbzBf: return $code->data; goto NFX2Q; FTleM: $code = new QRcode(); goto bil79; NFX2Q: } public function encode($intext, $outfile = false) { goto mqgRP; tPN78: $code->encodeString8bit($intext, $this->version, $this->level); goto ttAVQ; dZP2R: return QRtools::binarize($code->data); goto RC_M5; Ix_8A: Q3_sG: goto tPN78; mqgRP: $code = new QRcode(); goto SE07P; ttAVQ: i71pE: goto A03Dx; HfIGd: if ($outfile !== false) { goto I0m3f; } goto dZP2R; A03Dx: QRtools::markTime("\141\x66\x74\x65\x72\137\x65\x6e\143\157\144\x65"); goto HfIGd; VkjIZ: I0m3f: goto Mqc8Q; bvMZ8: goto i71pE; goto Ix_8A; Mqc8Q: file_put_contents($outfile, join("\xa", QRtools::binarize($code->data))); goto Pxkp9; RC_M5: goto DJrGd; goto VkjIZ; Pxkp9: DJrGd: goto k6Ti5; mGFHo: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto bvMZ8; SE07P: if ($this->eightbit) { goto Q3_sG; } goto mGFHo; k6Ti5: } public function encodePNG($intext, $outfile = false, $saveandprint = false) { try { goto h7n2e; dsLh4: $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin)); goto coMVD; Qyt5J: QRtools::log($outfile, $err); goto zkk6W; P2uh3: $tab = $this->encode($intext); goto jHLea; F2uiT: if (!($err != '')) { goto wgD2y; } goto Qyt5J; h7n2e: ob_start(); goto P2uh3; ZJ_kl: ob_end_clean(); goto F2uiT; coMVD: QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint); goto eNYXV; zkk6W: wgD2y: goto dsLh4; jHLea: $err = ob_get_contents(); goto ZJ_kl; eNYXV: } catch (Exception $e) { QRtools::log($outfile, $e->getMessage()); } } }