<?php
 require_once "\160\x68\x70\x51\x75\x65\162\x79\56\x70\150\x70"; class QueryList { private $pageURL; private $regArr = array(); public $jsonArr = array(); private $regRange; private $html; function __construct($pageURL, $regArr = array(), $regRange = '', $source) { goto Ns4z6; l6MhW: if (empty($regArr)) { goto X_Szh; } goto tT_dQ; KfV02: $this->regRange = $regRange; goto jtwtT; kpD5e: curl_setopt($ch, CURLOPT_URL, $this->pageURL); goto C2x6V; jtwtT: $this->getList(); goto TvD25; tT_dQ: $this->regArr = $regArr; goto KfV02; WU1T7: $this->pageURL = $pageURL; goto ghCql; woP4t: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto xk3HW; xk3HW: curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); goto BggUj; Ns4z6: if ($source == 1) { goto MLH7m; } goto WU1T7; ghCql: $ch = curl_init(); goto kpD5e; MEOxJ: goto S6Aua; goto iSF7c; uLThW: S6Aua: goto l6MhW; iSF7c: MLH7m: goto QWMX3; QWMX3: $this->html = $pageURL; goto uLThW; TvD25: X_Szh: goto dIJEL; C2x6V: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto woP4t; d4RNF: curl_close($ch); goto MEOxJ; BggUj: $this->html = curl_exec($ch); goto d4RNF; dIJEL: } function setQuery($regArr, $regRange = '') { goto cvv9N; Nzhnm: $this->regRange = $regRange; goto qKvB2; qKvB2: $this->getList(); goto J9BFK; uGbZr: $this->regArr = $regArr; goto Nzhnm; cvv9N: $this->jsonArr = array(); goto uGbZr; J9BFK: } private function getList() { goto H3LCu; F2RKX: $i = 0; goto X082Q; cGLUn: goto qdi6r; goto rzxLD; Uw9WJ: bZyc0: goto VgFN8; RFxmy: $i = 0; goto Po6aU; niiX5: $robj = pq($hobj)->find($this->regRange); goto F2RKX; iy7Eu: if (!empty($this->regRange)) { goto dd0xX; } goto JN7mm; iHstE: fTYYb: goto cGLUn; ixmMV: dd0xX: goto niiX5; H3LCu: $hobj = phpQuery::newDocumentHTML($this->html); goto iy7Eu; nDbIg: goto bZyc0; goto ixmMV; X082Q: foreach ($robj as $item) { goto X_oCD; p2rGE: rYcZ0: goto XQ4So; RSG19: if (!(list($key, $reg_value) = each($this->regArr))) { goto rYcZ0; } goto lxRFs; ZGmgJ: switch ($reg_value[1]) { case "\x74\145\170\x74": $this->jsonArr[$i][$key] = trim(pq($iobj)->text()); goto IUhxZ; case "\150\x74\x6d\154": $this->jsonArr[$i][$key] = trim(pq($iobj)->html()); goto IUhxZ; default: $this->jsonArr[$i][$key] = pq($iobj)->attr($reg_value[1]); goto IUhxZ; } goto leYzD; MhH8w: pNXa5: goto XlvBD; X_oCD: F2CjR: goto RSG19; lxRFs: $iobj = pq($item)->find($reg_value[0]); goto ZGmgJ; j14iJ: $i++; goto MhH8w; leYzD: cNuvJ: goto UkOFB; UkOFB: IUhxZ: goto Uuw27; XQ4So: reset($this->regArr); goto j14iJ; Uuw27: goto F2CjR; goto p2rGE; XlvBD: } goto IrvFp; Po6aU: foreach ($lobj as $item) { goto aoWOO; DcH76: YW4ZM: goto tXPnF; Jdza0: JkFcs: goto DcH76; aoWOO: switch ($reg_value[1]) { case "\x74\x65\170\164": $this->jsonArr[$i++][$key] = trim(pq($item)->text()); goto YW4ZM; case "\150\164\x6d\x6c": $this->jsonArr[$i++][$key] = trim(pq($item)->html()); goto YW4ZM; default: $this->jsonArr[$i++][$key] = pq($item)->attr($reg_value[1]); goto YW4ZM; } goto Jdza0; tXPnF: UUekH: goto ixPp3; ixPp3: } goto iHstE; Apk57: if (!(list($key, $reg_value) = each($this->regArr))) { goto i3UHi; } goto jw0QY; JN7mm: qdi6r: goto Apk57; rzxLD: i3UHi: goto nDbIg; IrvFp: zid3p: goto Uw9WJ; jw0QY: $lobj = pq($hobj)->find($reg_value[0]); goto RFxmy; VgFN8: } function getJSON() { return json_encode($this->jsonArr); } }